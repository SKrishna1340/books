var g_sepIdx = [];
//g_searchEnginePlainTextArray -> treeId | TopicText
var g_searchEnginePlainTextArray = [];
g_sepIdx[g_sepIdx.length] = '8c79bbffdf2b09435ebee508c938a28d';
g_searchEnginePlainTextArray['8c79bbffdf2b09435ebee508c938a28d'] = 'Bienvenido al Getting Started (primeros pasos) de \"WinCC Runtime Unified\". Usaremos el ejemplo de una empresa cervecera mediana para explicarle cómo comenzar a configurar con WinCC la solución de manejo y visualización que gestione el proceso de elaboración de cerveza. Objeto de la configuración El objeto de la configuración son las fases del proceso de elaboración de cerveza que se exponen a continuación: Maceración Decantado Cocción del mosto La fábrica de cerveza solo procesa materias primas de la región, por lo que no se utiliza más que una caldera.  Pasos de configuración En Getting Started (primeros pasos) aprenderá los siguientes pasos de la configuración: Configuración de la visualización del proceso de elaboración de cerveza Monitorización y registro del proceso de elaboración Configuración de los juegos de parámetros (opcional) Configuración de la administración de usuarios Configuración de la navegación de imágenes Realización de la prueba de funcionamiento en runtime Proyecto de ejemplo Si solo desea ver los pasos y resultados de configuración que figuran en este Getting Started (primeros pasos), utilice el proyecto \" Brewery\". Este proyecto contiene el proyecto ejecutable terminado, en el que se han realizado todos los pasos de configuración mostrados. El proyecto incluye un controlador y un dispositivo HMI. El dispositivo HMI está conectado con el controlador a través de Ethernet. El proceso de elaboración de cerveza se controla y visualiza desde el dispositivo HMI. El controlador procesa los parámetros conforme a su programación y envía los datos medidos por los sensores al dispositivo HMI, donde se visualizan.  Proyecto de ejemplo \"Brewery\" disponible para su descarga en el portal SIOS';
g_sepIdx[g_sepIdx.length] = 'a1c9a2cee6b96a87ae3027826f1db09a';
g_searchEnginePlainTextArray['a1c9a2cee6b96a87ae3027826f1db09a'] = 'Principios básicos En un proyecto se guardan de manera estructurada todos los datos de una solución de manejo y visualización:  uno o varios paneles de operador, incluidos los datos de configuración y la comunicación del proceso de cada panel. ';
g_sepIdx[g_sepIdx.length] = 'efc52f589bd3bd70def195ee96a1b35c';
g_searchEnginePlainTextArray['efc52f589bd3bd70def195ee96a1b35c'] = 'Introducción  Para el ejemplo de la fábrica de cerveza es preciso crear un proyecto. Procedimiento Cree un proyecto nuevo. Cambie a la vista de proyecto. Agregue un dispositivo nuevo.';
g_sepIdx[g_sepIdx.length] = '8d871b175e639ae5e580d5670a05b108';
g_searchEnginePlainTextArray['8d871b175e639ae5e580d5670a05b108'] = 'Principios básicos WinCC trabaja con dos tipos de variables: Variables externas Variables internas Las variables externas constituyen el elemento de unión entre WinCC y los sistemas de automatización. Los valores de variables externas se corresponden con los valores de proceso de la memoria de un sistema de automatización. Las variables internas no poseen conexión al proceso y solo transportan valores dentro de WinCC. ';
g_sepIdx[g_sepIdx.length] = 'aaddf3760e2b7bd5746fc38e6e2910b3';
g_searchEnginePlainTextArray['aaddf3760e2b7bd5746fc38e6e2910b3'] = 'Introducción Durante el proceso de elaboración de cerveza deben supervisarse distintas magnitudes como los niveles de llenado de los depósitos de reserva o la temperatura de la cuba de mosto. Para cada una de estas magnitudes debe crearse una variable. A continuación, se crearán las variables indicadas en la tabla y se organizarán en tablas de variables.  Nombre de la tabla de variables Utilización filling_levels Nivel de llenado de los depósitos temperature Temperatura de los depósitos pressure Presión de los depósitos valve_status Estado de la válvula mash_tun Estados de la cuba de mosto Nombre de variable Utilización Tipo de datos Tabla de variables HMI_filling_level_water Nivel de llenado del depósito de agua Int filling_levels HMI_filling_level_hop Nivel de llenado del depósito de lúpulo Int filling_levels HMI_filling_level_malt Nivel de llenado del depósito de malta Int filling_levels HMI_valve_status_water Estado de la válvula del depósito de agua abierta/cerrada Bool valve_status HMI_valve_status_hop Estado de la válvula del depósito de lúpulo abierta/cerrada Bool valve_status HMI_valve_status_malt Estado de la válvula del depósito de malta abierta/cerrada Bool valve_status HMI_filling_level_mash_tun Nivel de llenado de la cuba de mosto Int mash_tun HMI_temperature_mash_tun Temperatura de la cuba de mosto Int mash_tun HMI_mash_tun_heating Calentador activo/inactivo Bool mash_tun HMI_pressure_water Presión del depósito de agua Int pressure HMI_pressure_hop Presión del depósito de lúpulo Int pressure HMI_pressure_malt Presión del depósito de malta Int pressure HMI_temperature_water Temperatura del depósito de agua Int temperature HMI_temperature_hop Temperatura del depósito de lúpulo Int temperature HMI_temperature_malt Temperatura del depósito de malta Int temperature Procedimiento Cree una tabla de variables y agregue a ella una variable. Indique un nombre para la variable y seleccione el tipo de datos. Cree las demás variables del mismo modo. Para comprobar los resultados visualice todas las variables.';
g_sepIdx[g_sepIdx.length] = '394b6f060e73307cf9f6ef7a813c43df';
g_searchEnginePlainTextArray['394b6f060e73307cf9f6ef7a813c43df'] = 'Principios básicos Una imagen HMI representa la interfaz de usuario de una estación de manejo y visualización. En la imagen HMI se visualiza una instalación o un proceso con objetos de imagen predefinidos. El operador interactúa con el proceso desde la imagen HMI. Una imagen está formada por objetos de imagen estáticos y dinámicos. Los objetos de imagen estáticos no dependen del proceso. Objetos de imagen estáticos son, entre otros, etiquetas o gráficos. Los objetos de imagen dinámicos varían en función del proceso. Por lo general, los objetos de imagen dinámicos visualizan valores de proceso, entre ellos, niveles de llenado. El operador interviene en el proceso desde objetos de imagen dinámicos.';
g_sepIdx[g_sepIdx.length] = '8899f3eb214829f70508723eac6eca10';
g_searchEnginePlainTextArray['8899f3eb214829f70508723eac6eca10'] = 'Introducción Nombre de la imagen HMI Tipo de imagen Utilización Tamaño en píxeles BreweryOverview Imagen inicial Imagen general de manejo y visualización del proceso de elaboración de cerveza 1440x900 BreweryProcess Control del proceso Visualización del proceso de elaboración de cerveza 1440x800 Alarms Control del proceso Vista general de las alarmas del proceso ProcessValues Control del proceso Vista general de los valores de proceso archivados ProductCtrl Control del proceso Control de la producción Header Navegación Imagen para abrir la navegación entre las imágenes de control del proceso 1440x100 Navigation Navegación Imagen para navegar entre las imágenes de control del proceso 250x300 Procedimiento Cree la imagen HMI para visualizar la imagen inicial. Ajuste el tamaño de la imagen HMI. Cree las otras imágenes HMI del mismo modo y defina el tamaño de la imagen en la tabla superior.';
g_sepIdx[g_sepIdx.length] = 'f55011b52993d6f91ee99b291ed56236';
g_searchEnginePlainTextArray['f55011b52993d6f91ee99b291ed56236'] = 'Finalidad La navegación de imágenes se implementa con la tecnología de ventanas de imagen. Agregue en una imagen general las ventanas de imagen siguientes, las cuales cumplen tareas distintas: Encabezado El encabezado permite mostrar una ventana de navegación. Navegación Con los botones de la ventana de navegación, el operador cambia el contenido de la ventana Content. Por defecto, la ventana de navegación está oculta. Content La ventana Content muestra información sobre la instalación. Muestra, por ejemplo, el nivel de los depósitos o los avisos de la instalación. El contenido de las ventanas de imagen puede definirse por medio de las imágenes HMI. En este apartado cree todas las imágenes HMI que necesite para crear la navegación de imágenes en este Getting Started (primeros pasos). Template Suite Las instalaciones y las máquinas son cada vez más complejas, por lo que cada vez plantean más exigencias al operador de una instalación. En consecuencia, es cada vez más importante que la interfaz de usuario entre hombre y máquina sea intuitiva y gráficamente atractiva.   HMI Template Suite ofrece para ello plantillas e ideas para diseñar de forma moderna y clara la configuración de su panel de operador HMI. El diseño está pensado para una operabilidad, una visibilidad y una ampliabilidad sencillas. Gracias a ello, el manejo de la máquina se simplifica y se reducen los errores de operación.  En el ejemplo de aplicación siguiente aprenderá a trabajar con  HMI Template Suite: Ejemplo de aplicación \"Template Suite\"';
g_sepIdx[g_sepIdx.length] = '8ca8e8114998af0f5b4d378e701e8114';
g_searchEnginePlainTextArray['8ca8e8114998af0f5b4d378e701e8114'] = 'Principios básicos Los faceplates son grupos de objetos de manejo y visualización definidos por el usuario que se almacenan, gestionan y editan en el proyecto de manera centralizada. Todas las modificaciones de un faceplate en un proyecto se efectúan de manera centralizada en el tipo del faceplate. Los faceplates se emplean para objetos o partes de una instalación que se reutilizan y cuya estructura de datos es idéntica. Para hacer posible la modificación centralizada, los faceplates están basados en un modelo de tipo/instancia. En el tipo del faceplate se crean las propiedades de las instancias del faceplate de manera centralizada. Las instancias representan los lugares de uso locales del tipo de faceplate.';
g_sepIdx[g_sepIdx.length] = '8fd805f9f33db653a1628eb449c64ad3';
g_searchEnginePlainTextArray['8fd805f9f33db653a1628eb449c64ad3'] = 'Introducción Los ingredientes básicos como agua, lúpulo y malta se almacenan en tres depósitos de reserva de igual construcción. En cada depósito de reserva, una válvula controla el transporte hacia la cuba de mosto. Como para todos los depósitos se utilizan los mismos elementos de mando y visualización, utilice la tecnología de faceplates para implementar la visualización. En un faceplate tipo (denominado en adelante tipo de faceplate), defina las propiedades que se parametrizarán en la utilización posterior.  Para configurar el tipo de faceplate necesita las propiedades siguientes: Propiedad Utilización Tipo de datos filling_level Nivel medido del depósito Int valve_status Estado de la válvula Bool temperature Temperatura medida del depósito Int pressure Presión medida del depósito Int name Nombre del ingrediente WString Procedimiento Cree un tipo de faceplate nuevo en la librería. Configure el tipo de faceplate nuevo. Cree la propiedad \" filling_level\" para el tipo de faceplate. Cree las restantes propiedades citadas en la tabla para el tipo de faceplate. Agregue un indicador de barra para el nivel. Cree un nuevo tipo de gráfico para la visualización del depósito de reserva. Agregue un depósito como gráfico predeterminado. Encontrará el depósito en la caja de herramientas, en \" Graphics \u003e WinCC graphics folder \u003e Equipment \u003e Automation (EMF) \u003e Tanks\". Valide la versión del tipo de gráfico. Inserte el tipo de gráfico en la imagen. De la misma manera, cree un tipo de gráfico para la válvula y péguelo en la imagen. Encontrará la válvula en la caja de herramientas, en \" Graphics \u003e WinCC graphics folder \u003e Equipment \u003e Automation (EMF) \u003e Valves\". Vincule la propiedad que indica el nivel con el indicador de barra.   Inserte un campo de texto para el nombre y un círculo. En este Getting Started (primeros pasos) aún no se interconecta el campo de texto.  Parametrice el círculo de manera que su color de fondo pueda modificarse con una variable (1, 2). Muestre el campo para parametrizar las variables (3).  Defina el estado de la válvula como variable del color y determine qué color debe aplicarse para qué estado de la variable. Ajuste el tamaño del faceplate. Por último, seleccione con \u003cMayús+Clic\u003e los objetos \"Depósito\", \"Válvula\" e \"Indicador de nivel\" y establezca la transparencia en \"100 %\".  Valide el tipo de faceplate en la librería.';
g_sepIdx[g_sepIdx.length] = 'e7365ad4057ef4c4de223645e95c2257';
g_searchEnginePlainTextArray['e7365ad4057ef4c4de223645e95c2257'] = 'Introducción Ahora deben visualizarse los depósitos de reserva para los ingredientes de la cerveza en función del tipo de faceplate creado. Para cada depósito de reserva agregue una instancia del tipo de faceplate y parametrice las propiedades con las variables correspondientes. Procedimiento Abra la imagen HMI  \"BreweryProcess\" y cree la instancia para el depósito de reserva que contiene agua a partir del tipo de faceplate.  Parametrice las propiedades \" pressure\" de la instancia del faceplate con la variable \" HMI_pressure_water\". Parametrice del mismo modo las restantes propiedades de la instancia del faceplate. Visualice y parametrice del mismo modo los depósitos de reserva de \"Lúpulo\". Visualice y parametrice del mismo modo los depósitos de reserva de \"Malta\".';
g_sepIdx[g_sepIdx.length] = '3ea41680b675ae9da1f17efb61c42e46';
g_searchEnginePlainTextArray['3ea41680b675ae9da1f17efb61c42e46'] = 'Introducción A continuación, debe ampliarse el sinóptico de proceso ya creado, que contiene los tres depósitos de reserva para agua, lúpulo y malta, con los componentes restantes del proceso de elaboración. Para ello se agrega una cuba de mosto y se conecta con los depósitos de reserva mediante tubos. También se agrega una fuente de calor para calentar la cuba de mosto. Además de los elementos gráficos deben agregarse otros de visualización para los valores de proceso de la cuba de mosto. Procedimiento Agregue el depósito que representa la cuba de mosto. Para completar la imagen HMI, utilice figuras de tubos: Agregue el gráfico de la fuente de calor representada. Inserte una vista de valores para la variable de nivel de llenado  \"HMI_filling_level_mash_tun\" del depósito. Si arrastra una variable a la imagen HMI, se creará automáticamente un campo ES conectado con esta variable.  Inserte un campo de texto para etiquetar la variable.';
g_sepIdx[g_sepIdx.length] = '7bc36370ef37eac5758153071e39be2d';
g_searchEnginePlainTextArray['7bc36370ef37eac5758153071e39be2d'] = 'Introducción A continuación, debe configurarse una ventana emergente para faceplates, en la que al hacer clic en uno de los tres depósitos de reserva se muestre Información adicional sobre el nivel, la temperatura y la presión del respectivo depósito. Procedimiento Duplique el faceplate del depósito en la librería. De este modo, todas las variables de interfaces del tipo de faceplate \"Depósito\" se aplicarán en el faceplate nuevo. Defina las propiedades del nuevo tipo de faceplate. Abra el nuevo tipo de faceplate para editarlo. Borre los elementos gráficos del faceplate copiado. Agregue el campo de texto para el nivel.  Agregue el campo de salida para el nivel. Conecte el campo de salida con la variable de la interfaz \" filling level\". Configure los campos de texto y los campos de salida de temperatura y presión, y conecte los campos de salida con las variables de interfaz \" temperature\" y \" pressure\". Ajuste el tamaño del faceplate. Habilite la ventana emergente para el faceplate en la librería. Abra el tipo de faceplate \" Tank\" en la librería para editarlo. Cree un evento que se dispare al hacer clic con el botón izquierdo sobre el depósito. Agregue la plantilla de script para abrir un faceplate como ventana emergente. Introduzca en el script el nombre del faceplate recién creado y una designación. Habilite el tipo de faceplate en la librería y establezca que las instancias se actualicen en el proyecto. Resultado Se ha creado la ventana emergente para faceplates y aparece en Runtime con la información configurada al hacer clic en uno de los depósitos de reserva.';
g_sepIdx[g_sepIdx.length] = 'f59f43027a6aab5a12ac5b902d23f36a';
g_searchEnginePlainTextArray['f59f43027a6aab5a12ac5b902d23f36a'] = 'Principios básicos WinCC garantiza que todos los eventos del desarrollo del proceso se registran cronológicamente. El operador de la instalación verá las desviaciones del desarrollo del proceso en forma de avisos. WinCC admite la trazabilidad completa al tratar la causa de un error. Un aviso contiene el estado trazable del tratamiento de errores con sellado de tiempo. Un ejemplo de aviso es cuando se rebasa por defecto el límite del nivel de llenado de un depósito de reserva. ';
g_sepIdx[g_sepIdx.length] = 'cd3582d3ca6c8abe4623f644dec94d31';
g_searchEnginePlainTextArray['cd3582d3ca6c8abe4623f644dec94d31'] = 'Introducción A continuación, debe configurarse un aviso que se dispare cuando el nivel de llenado de uno de los depósitos sea inferior al límite definido. Para los depósitos de reserva de los ingredientes deben configurarse los avisos siguientes: Nombre Texto de alarma Variable supervisada Categoría Valor límite alarm_level_water \" filling level water low\" HMI_filling_level_water  Alarma 50 l alarm_level_malt \" filling level malt low\" HMI_filling_level_malt Alarma 50 l alarm_level_hop \" filling level hop low\" HMI_filling_level_hop  Alarma 50 l Procedimiento Abra la sinopsis de avisos. Cree avisos para violaciones de límites del nivel de llenado. Cree los demás avisos del mismo modo.';
g_sepIdx[g_sepIdx.length] = '22bcc9724aa1443295a7442f4dcde0c4';
g_searchEnginePlainTextArray['22bcc9724aa1443295a7442f4dcde0c4'] = 'Principios básicos El archivado es un proceso para analizar estados de error y documentar procesos. Si se evalúan los datos archivados, se pueden deducir medidas para optimizar los ciclos de mantenimiento o para aumentar la calidad del producto. Durante la configuración, seleccione en WinCC categorías y variables que deben archivarse en el modo Proceso. Si desea realizar la evaluación más adelante, seleccione el periodo del que desea ver, p. ej., avisos. ';
g_sepIdx[g_sepIdx.length] = 'b47369b06eb865149e75019b40a518c6';
g_searchEnginePlainTextArray['b47369b06eb865149e75019b40a518c6'] = 'Introducción Ahora deben archivarse los avisos del nivel de llenado configurados previamente con la categoría \"Alarma\". Para el archivado, se crea un fichero de avisos que, a continuación, se guarda con la categoría \"Alarma\". De este modo, todos los avisos con la categoría \"Alarma\" se archivan en este fichero.   Procedimiento Cree un fichero de avisos nuevo en el que se archivarán los avisos de violaciones de límites. Guarde el fichero de avisos en la categoría.';
g_sepIdx[g_sepIdx.length] = '2cead40dbf5f5af592fa194f78249781';
g_searchEnginePlainTextArray['2cead40dbf5f5af592fa194f78249781'] = 'Introducción Es preciso archivar los valores de proceso de los niveles de llenado de los depósitos de reserva y de la cuba de mosto. Para ello, debe crearse una variable de fichero para cada variable y, a continuación, asignarse a un fichero de variables. Nombre de la variable de fichero Archivado de valores de proceso procedentes de variables Tipo de datos Fichero de variables log_water_level HMI_filling_level_water Int filling_levels log_hop_level HMI_filling_level_hop Int filling_levels log_malt_level HMI_filling_level_malt Int filling_levels log_mash_tun_level HMI_filling_level_mash_tun Int filling_levels log_status_water HMI_valve_status_water Bool valve_status log_status_hop HMI_valve_status_hop Bool valve_status log_status_malt HMI_valve_status_malt Bool valve_status Procedimiento Cree un fichero de variables con el nombre  \"filling_levels\". Abra la tabla de variables \" filling_levels\" y cree una variable de fichero para cada una de las variables mencionadas. Asigne las variables de fichero al fichero de variables \" filling_levels\". Abra la tabla de variables \" mash_tun\" y cree una variable de fichero para la variable mencionada. Asigne las variables de fichero al fichero de variables \" filling_levels\". Cree un fichero de variables \" valve_status\" del mismo modo. Abra la tabla de variables \" valve_status\" y cree del mismo modo una variable de fichero para cada una de las variables mencionadas. Asigne las variables de fichero al fichero de variables \" valve_status\".';
g_sepIdx[g_sepIdx.length] = '8494675ee2e1d7b7e6279abbc403ac6b';
g_searchEnginePlainTextArray['8494675ee2e1d7b7e6279abbc403ac6b'] = 'Visualización de avisos Los avisos registrados pueden representarse en Runtime en un visor de avisos. De este modo, se puede detectar directamente si la instalación tiene problemas o errores. Por ejemplo, se indica si se rebasa por defecto un valor límite del nivel de llenado de un depósito de reserva y este debe rellenarse. Visualización de valores de proceso Los valores de proceso actuales pueden representarse en Runtime en un visor de curvas. Por ejemplo, represente en una curva el nivel de llenado de cada uno de los tres depósitos de reserva. Así podrá detectar siempre con claridad el nivel de llenado actual y saber cuándo debe pedir nuevas reservas o rellenar. También puede representar el estado de la válvula en un visor de curvas. Esto permite ver cuándo se abre qué válvula.';
g_sepIdx[g_sepIdx.length] = '9ffd78adc609cc5c6cc662b0715d537f';
g_searchEnginePlainTextArray['9ffd78adc609cc5c6cc662b0715d537f'] = 'Introducción A continuación, aprenderá a configurar un visor de avisos para representar los avisos archivados. Requisitos Se ha creado el fichero de avisos. Procedimiento Abra la imagen \" Alarms\" e inserte un visor de avisos. Configure el visor de avisos de forma que muestre los avisos archivados. Resultado El visor de avisos para representar los avisos archivados está configurado.';
g_sepIdx[g_sepIdx.length] = 'd3eacd3df898313c4d84a9edf44059d4';
g_searchEnginePlainTextArray['d3eacd3df898313c4d84a9edf44059d4'] = 'Introducción Los niveles de los tres depósitos y el estado de las tres válvulas deben verse en el panel de operador en forma de curva. Requisitos Los niveles de los 3 depósitos se han creado como variables archivadas \" log_hop_level\", \" log_malt_level\" y \" log_water_level\". Los estados de las 3 válvulas se han creado como variables archivadas \" log_status_hop\", \" log_status_malt\" y \" log_status_water\". Procedimiento Abra la imagen \" ProcessValues\" e inserte un visor de curvas. Inserte dos áreas de curvas en el visor de curvas. Configure el primer visor de curvas con los niveles: Establezca que se asignen variables archivadas a la primera curva. Establezca que a la primera curva se asignen los valores de la variable archivada \" log_hop_level\". Inserte otras dos curvas en el primer visor de curvas. Establezca que a las dos curvas se asignen los valores de las variables archivadas \" log_malt_level\" y \" log_water_level\". Asigne a la primera curva el color de línea deseado. Asigne a las otras dos curvas los colores de línea deseados. Configure el segundo visor de curvas con los estados de válvula: Establezca que se asignen variables archivadas a la primera curva. Establezca que a la primera curva se asignen los valores de la variable archivada \" log_status_hop\". Establezca para la primera curva el modo \" Stepped\". Inserte otras dos curvas en el segundo visor de curvas. Establezca que a las dos curvas se les asignen los valores de las variables archivadas \" log_status_malt\" y \" log_status_water\", y establezca para ambas curvas el modo \" Stepped\". Asigne a la primera curva el color de línea deseado. Asigne a las otras dos curvas los colores de línea deseados. Resultado Se ha configurado el visor de curvas para representar los niveles y el estado de las válvulas.';
g_sepIdx[g_sepIdx.length] = '43dd2ff4fe5d7e182a0debe8493ab64c';
g_searchEnginePlainTextArray['43dd2ff4fe5d7e182a0debe8493ab64c'] = 'Tipo de juego de parámetros En el tipo de juego de parámetros se definen los parámetros con sus propiedades conforme a los que se fabrica un producto. Un tipo de juego de parámetros es una plantilla para distintos productos con los mismos ingredientes básicos.  El tipo de juego de parámetros no almacena valores concretos de parámetros. En lugar de ello, a partir del tipo de juego de parámetros se crea un juego de parámetros para cada producto que debe fabricarse, por ejemplo cerveza de trigo o cerveza de tipo Pilsen. Los juegos de parámetros son útiles cuando se cambia a menudo entre productos con una composición similar. Esto permite pasar rápidamente a otro producto durante el proceso. Los cambios fundamentales de la estructura se realizan de modo centralizado en el tipo de juego de parámetros. Juegos de parámetros durante el proceso de elaboración de cerveza El maestro cervecero crea uno o varios juegos de parámetros o los importa. El jefe de turno elige el juego de parámetros correspondiente al producto que se debe fabricar. El dispositivo HMI transfiere el juego de parámetros al controlador y se inicia el proceso de elaboración. El controlador ejecuta el programa de usuario y utiliza para la fabricación los valores de parámetros de los ingredientes básicos. Los distintos ingredientes se envían al depósito de maceración. El proceso de elaboración continúa de acuerdo con las instrucciones del programa de usuario.';
g_sepIdx[g_sepIdx.length] = '5288ba7ac44143b01ec97f440865792f';
g_searchEnginePlainTextArray['5288ba7ac44143b01ec97f440865792f'] = 'Introducción A continuación configuraremos un tipo de juego de parámetros. Para ello debemos configurar un controlador. Si, a continuación, desea probar la configuración, cargue el proyecto en un controlador real o utilice \" PLCSim\" para simular un controlador. Requisitos Requisitos para la configuración Para configurar un controlador necesitará una licencia de \" STEP 7\". Requisitos para probar la configuración Para probar la configuración de los juegos de parámetros con \" PLCSim\", necesitará una versión instalada y configurada de \" PLCSim\". Encontrará información sobre la instalación y la configuración en el manual de funciones de \" PLCSim\". Procedimiento Para la comunicación entre el dispositivo HMI y el controlador, realice las siguientes acciones en el controlador: Agregue un controlador con el que pueda comunicarse el dispositivo HMI. Cree un tipo de datos de usuario (UDT). Cree un bloque de programa y guarde el UDT como tipo de datos. Por el lado del HMI, conecte el HMI con el controlador y, a continuación, configure el tipo de juego de parámetros. Para ello, realice las acciones siguientes: Vincule la conexión entre HMI y controlador con el bloque de programa a través de una variable HMI. Cree el tipo de juego de parámetros. Inserte el visor de juegos de parámetros en el panel de mando del HMI.';
g_sepIdx[g_sepIdx.length] = '8fc08deb70bbbab8290f53e71dd25302';
g_searchEnginePlainTextArray['8fc08deb70bbbab8290f53e71dd25302'] = 'Introducción Para transferir juegos de parámetros, configure primero un controlador y, a continuación, la conexión con el HMI. Procedimiento Agregue un nuevo dispositivo. Seleccione el controlador \" 1518T-4 PN/DP\" y cámbiele el nombre a \" Brewery Control\". Cambie a \"Dispositivos y redes\". Agregue al HMI el módulo de comunicación \" CP 1612 (A2)\". Interconecte el controlador con la nueva interfaz del HMI. Cree la conexión HMI entre el HMI y el controlador.';
g_sepIdx[g_sepIdx.length] = '4a449ba928c003de1ae9c4c393e063ab';
g_searchEnginePlainTextArray['4a449ba928c003de1ae9c4c393e063ab'] = 'Introducción A continuación crearemos un tipo de datos de usuario en el controlador y lo agregaremos a la librería del proyecto. El tipo de datos de usuario será después la base para crear el tipo de juego de parámetros. En el tipo de datos de usuario deben crearse los siguientes elementos: Nombre del elemento Utilización Tipo de datos water Proporción de agua Int hop Proporción de lúpulo Int malt Proporción de malta Int Crear el tipo de datos de usuario y agregarlo a la librería Agregue un nuevo tipo de datos. Cambie el nombre del tipo de datos de usuario a \" UDT_Beer\" y agregue los elementos \" Water\", \" Hop\" y \" Malt\". Elija el tipo de datos \" Int\" para todos los elementos. Agregue el nuevo tipo de datos de usuario a la librería del proyecto. Asigne el nombre \" UDT_Beer\" al tipo de datos de usuario en la librería.';
g_sepIdx[g_sepIdx.length] = '2a15dae3d779f47d2ad558ceeb130352';
g_searchEnginePlainTextArray['2a15dae3d779f47d2ad558ceeb130352'] = 'Introducción En el bloque de programa se almacenan los valores de los elementos \" Water\", \" Hop\" y \" Malt\". A continuación, insertaremos un bloque de datos y lo interconectaremos con el tipo de datos de usuario \" UDT_Beer\". Procedimiento Agregue un nuevo bloque de programa. Cambie el nombre del bloque de datos nuevo a \" DB_Brewery\". Cree el elemento \" Beer\" y utilice el tipo de datos de usuario como tipo de datos. Los parámetros del tipo de datos de usuario se agregarán automáticamente.';
g_sepIdx[g_sepIdx.length] = 'e83c375579719e119021ee3a6528f09a';
g_searchEnginePlainTextArray['e83c375579719e119021ee3a6528f09a'] = 'Introducción A continuación, configuramos el intercambio de datos entre el controlador y el panel de operador HMI. Vincular la conexión HMI con el bloque de programa Inserte la nueva tabla de variables \" Recipe\" y cree el parámetro \" HMI_Beer\". Seleccione la conexión HMI. Elija el tipo de datos de PLC \" Beer\" creado anteriormente para el bloque de datos.';
g_sepIdx[g_sepIdx.length] = '00be830658fcb99f8091bd747221757c';
g_searchEnginePlainTextArray['00be830658fcb99f8091bd747221757c'] = 'Introducción A continuación crearemos un tipo de juego de parámetros para distintas variedades de cerveza. La estructura del juego de parámetros se definirá por medio del tipo de juego de parámetros  \"PST_Beer\". El tipo de juego de parámetros está compuesto por los elementos  \"water\",  \"hop\" y  \"malt\". Nombre del elemento Utilización Tipo de datos Unidad de medida water Proporción de agua Int l hop Proporción de lúpulo Int kg malt Proporción de malta Int kg Procedimiento Agregue un nuevo tipo de juego de parámetros y cámbiele el nombre a \" PST_Beer\". Elija el tipo de datos de usuario \" UDT_Beer\" como tipo de datos. La estructura se creará automáticamente a partir del tipo de datos de usuario. Seleccione la variable \" Beer\". Defina las unidades de medida para los tipos de datos.';
g_sepIdx[g_sepIdx.length] = 'd0016df7e4c986f91a49b4cec65dc46c';
g_searchEnginePlainTextArray['d0016df7e4c986f91a49b4cec65dc46c'] = 'Introducción A continuación, configuraremos el visor de juegos de parámetros. El visor de juegos de parámetros sirve para crear y editar juegos de parámetros en runtime. Procedimiento Inserte el visor de juegos de parámetros en la imagen HMI \" ProductCtrl\". Vincule el tipo de juego de parámetros con el visor de juegos de parámetros.';
g_sepIdx[g_sepIdx.length] = '97da620fc784de1441258bf51cb013a7';
g_searchEnginePlainTextArray['97da620fc784de1441258bf51cb013a7'] = 'Introducción Para establecer la conexión con PLCSim, se deben definir los derechos de acceso al PLC y, a continuación, configurar la conexión. Cuando se inicia la simulación, se abre la ventana de control de PLCSim. Los botones Run y Stop permiten controlar la simulación. Si sigue el procedimiento descrito, no es necesario manejar la ventana de control.  Durante el proceso, desactive las funciones de protección de datos confidenciales y restricciones de manejo.  Estas funciones se desactivan para facilitar la simulación. No obstante, es necesario limitar estos accesos en un entorno de proceso real. En los sistemas de automatización, lo más importante es mantener a toda costa la seguridad de operación y la protección de la integridad personal. La premisa determinante al hacerlo es preservar la disponibilidad de la instalación y, con ello, el control ilimitado del proceso. Procedimiento Abra las propiedades del controlador \"Brewery Control\". Desactive la función de protección de los datos de configuración confidenciales del PLC y seleccione el nivel de protección \"Acceso completo\" para el controlador. Inicie la simulación. Busque un dispositivo de destino y selecciónelo. Compruebe los ajustes y cargue los datos. Finalice la operación de carga. Establezca una \"conexión online\". Resultado La conexión se ha establecido correctamente.';
g_sepIdx[g_sepIdx.length] = 'f5ad851385b46bf71b35d072364fd27d';
g_searchEnginePlainTextArray['f5ad851385b46bf71b35d072364fd27d'] = 'Principios básicos WinCC permite restringir acciones de manejo relevantes para la seguridad a determinados usuarios y proteger de este modo datos y funciones en Runtime contra accesos no autorizados. Puede crear usuarios y asignarles permisos. En los objetos relevantes para la seguridad puede configurar los permisos necesarios para el manejo. Los usuarios deben acreditarse en Runtime introduciendo el nombre de usuario y la contraseña. La acción se ejecutará si el usuario posee el permiso necesario. Cuando se asigna un rol a un usuario, este obtiene los derechos asociados a dicho rol. En un proceso de elaboración de cerveza, los roles y los derechos correspondientes podrían ser los siguientes: Maestro cervecero Jefe de turno Operador Autorizado a observar el proceso x x x Autorizado a manejar el proceso x x Autorizado a editar recetas x La administración de usuarios se realiza a nivel global o local. Administración de usuarios global y local La administración de usuarios local se efectúa dentro del proyecto. Los usuarios son creados por el ingeniero y solo existen para este proyecto. El ingeniero define los derechos de los distintos roles y asigna los roles a los usuarios. Para agregar o eliminar un usuario posteriormente, hay que cambiar el proyecto. La administración de usuarios local es idónea para los casos en que se crea y administra un solo proyecto. Por ejemplo, cuando se gestiona una sola fábrica de cerveza. En la administración de usuarios global, los usuarios están desvinculados de su rol en el proyecto. Los usuarios se administran de modo centralizado en un servidor externo. Los usuarios se crean en el servidor externo y se organizan en grupos en función de su misión posterior. El ingeniero no crea usuarios en el proyecto. Importa los grupos del servidor externo y asigna los roles correspondientes a los grupos. Para agregar usuarios posteriormente, hay que crearlos en el servidor externo y asignarlos a un grupo existente. De este modo, los usuarios obtienen automáticamente el rol asignado a su grupo en el proyecto en cuestión. No es necesario modificar el proyecto.  La administración de usuarios global resulta idónea cuando se deben gestionar varios proyectos de modo centralizado. Por ejemplo, cuando la misma empresa administra varias fábricas de cerveza o se incorporan nuevos empleados con frecuencia.';
g_sepIdx[g_sepIdx.length] = '54ef26d7006ca83ea81a2eaac10b5820';
g_searchEnginePlainTextArray['54ef26d7006ca83ea81a2eaac10b5820'] = ' XML_NODE_NOTE Introducción A continuación, aprenderá a crear una administración de usuarios local. Creación de usuarios locales Cree un usuario local nuevo. Indique un nombre para el usuario local nuevo y defina una contraseña. El nombre de usuario no puede contener espacios en blanco. Cree otros dos usuarios y defina una contraseña para cada uno de ellos. Asigne al usuario \" masterbrewer\" el rol \" HMI Administrator\". Asigne al usuario \" shiftsupervisor\" el rol \" HMI Operator\". Asigne al usuario \" worker\" el rol \" HMI Monitor\". Visualice los derechos de un usuario y compruébelos. En caso necesario, también puede definir roles de usuario propios.';
g_sepIdx[g_sepIdx.length] = '5e0bc357d8fffe5020f08d5a266872a7';
g_searchEnginePlainTextArray['5e0bc357d8fffe5020f08d5a266872a7'] = 'Principios básicos La visualización del proceso se distribuye por lo general entre varias imágenes, p. ej., según aspectos funcionales o tecnológicos. El cambio entre imágenes se denomina navegación de imágenes.';
g_sepIdx[g_sepIdx.length] = 'fa162268dd280668d5335ba55cb814e2';
g_searchEnginePlainTextArray['fa162268dd280668d5335ba55cb814e2'] = 'Principios básicos La navegación de imágenes se implementa con la tecnología de ventanas de imagen. La imagen general se divide en tres zonas con ayuda de ventanas de imagen y se establece qué imágenes HMI se muestran en la respectiva ventana de imágenes. La ventana de imágenes \" sw_Content\" muestra información de la instalación como, por ejemplo, el proceso de elaboración de cerveza, avisos o valores de proceso. Las ventanas de imágenes \" sw_Header\" y \" sw_Navigation\" muestran las imágenes HMI que se utilizan para la navegación. El botón \" Open Navigation\" de la imagen HMI \" Header\" muestra la imagen HMI \" Navigation\". Con los botones de la imagen HMI \" Navigation\", el operador cambia en Runtime las imágenes que se muestran en la ventana \" sw_Content\". Configuración En este apartado aprenderá lo siguiente: Inserción y configuración de ventanas de imágenes Configuración de botones para mostrar y ocultar ventanas de imágenes por medio de la función de sistema \" SetPropertyValue\" Configuración de botones para cambiar el contenido de una ventana de imágenes por medio de la función de sistema \" ChangeScreen\"';
g_sepIdx[g_sepIdx.length] = '445628e991dc3b999f1629c5ed54608c';
g_searchEnginePlainTextArray['445628e991dc3b999f1629c5ed54608c'] = 'Introducción La navegación por imágenes se implementa con la \"Tecnología de ventanas de imagen\". La tecnología de ventanas de imágenes permite realizar una representación imagen en imagen: Los cambios de imagen se realizan en la ventana de imágenes. La imagen raíz con las ventanas de imagen permanece siempre visible. Objeto Tipo Etiqueta Utilización BreweryOverview Imagen HMI - Imagen general de manejo y visualización del proceso de elaboración de cerveza sw_Content Ventana de imágenes - Imagen para mostrar las imágenes del control del proceso sw_Header Ventana de imágenes - Imagen para abrir la navegación entre las imágenes de control del proceso sw_Navigation Ventana de imágenes - Imagen para navegar entre las imágenes de control del proceso btn_ShowNavigation Botón Open Navigation Muestra la ventana de imágenes \" sw_Navigation\" btn_HideNavigation Botón \u003c Oculta la ventana de imágenes \" sw_Navigation\" btn_ProcessBrewery Botón Brewery Cambio a la imagen del proceso de elaboración de cerveza btn_ProcessValues Botón Process Values Cambio a la imagen de valores del proceso de elaboración de cerveza btn_Alarms Botón Alarms Cambio a la imagen de los avisos del proceso de elaboración de cerveza btn_ProductCtrl Botón Production Cambio de imagen al control de producción Procedimiento Abra la imagen HMI \" BreweryOverview\" e inserte una ventana de imágenes para visualizar el  Headers. Defina que la imagen HMI \" Header\" se visualice en la ventana de imágenes. Configure los ajustes de la ventana para la ventana de imágenes. Configure la ventana de imágenes de manera que se ajuste al tamaño de la imagen HMI mostrada. Defina el nombre de la ventana de imagen. Configure la ventana de imágenes \" sw_Content\": Copie la ventana de imágenes \" sw_Header\". Cambie el nombre de la ventana de imágenes copiada en \" sw_Content\". Defina que la imagen HMI \" BreweryProcess\" se visualice en la ventana de imágenes. Configure la ventana de imágenes \" sw_Navigation\": Copie la ventana de imágenes \" sw_Header\". Cambie el nombre de la ventana de imágenes copiada en \" sw_Navigation\". Defina que la imagen HMI \" Navigation\" se visualice en la ventana de imágenes. Defina que la ventana de imágenes \" sw_Navigation\" esté siempre en primer plano.  Coloque las tres ventanas de imágenes en la imagen HMI: Establezca la posición de la ventana de imágenes \" sw_Header\". Establezca la posición de la ventana de imágenes \" sw_Content\". Coloque la ventana de imágenes \" sw_Navigation\" con el ratón sobre las otras dos ventanas de imágenes.';
g_sepIdx[g_sepIdx.length] = 'cac9fd19a67991f790f4611784b3f70d';
g_searchEnginePlainTextArray['cac9fd19a67991f790f4611784b3f70d'] = ' XML_NODE_NOTE Introducción A continuación, configure la imagen HMI \" Header\" que se muestra en la ventana de imágenes \" sw_Header\". Con el botón de la imagen HMI \" Header\" se muestra la ventana de imágenes \" sw_Navigation\" en la que el operador cambia la imagen que se muestra en la ventana \" sw_Content\".  Procedimiento Abra la imagen HMI \" Header\" e inserte el botón que muestra la ventana de imágenes \" sw_Navigation\". Establezca el rótulo del botón. Inserte una función de sistema en el evento \" Click left mouse button\". Seleccione la función de sistema para definir el valor de la propiedad. Defina los parámetros de la función de sistema \" SetPropertyValue\". Mayúsculas y minúsculas Cuando establezca los parámetros, tenga en cuenta la correcta distribución de mayúsculas y minúsculas.';
g_sepIdx[g_sepIdx.length] = 'aa309aad67a9da81cdecf366c927702e';
g_searchEnginePlainTextArray['aa309aad67a9da81cdecf366c927702e'] = ' XML_NODE_NOTE Introducción A continuación, configure la imagen HMI \" Navigation\" que se muestra en la ventana de imágenes \" sw_Navigation\". Los botones de la imagen HMI \" Navigation\" permiten cambiar la imagen HMI que se muestra en la ventana \" sw_Content\".  De manera predeterminada, la ventana de imágenes \" sw_Navigation\" está oculta y puede mostrarse con el botón \" Open Navigation\" de \" Header\" y ocultarse de nuevo con el botón \" \u003c\" de la imagen HMI \" Navigation\". Procedimiento Abra la imagen HMI \" Navigation\" e inserte el botón que oculta la ventana de imágenes \" sw_Navigation\". Inserte el resto de los botones del mismo modo. Configure el botón \" \u003c\" que oculta la ventana de imágenes \" sw_Navigation\". Inserte una función de sistema en el evento \" Click left mouse button\". Seleccione la función de sistema \" SetPropertyValue\". Defina los parámetros de la función de sistema \" SetPropertyValue\". Mayúsculas y minúsculas Cuando establezca los parámetros, tenga en cuenta la correcta distribución de mayúsculas y minúsculas. Configure el botón \" Brewery\" que muestra el proceso de elaboración de cerveza en la ventana de imágenes \" sw_Content\". Inserte un evento nuevo. Seleccione la función de sistema \" ChangeScreen\". Defina que la imagen \" BreweryProcess\" se visualice en la ventana de imágenes \" sw_Content\". Indique la ruta relativa \" ../sw_Content\" de la ventana de imágenes \" sw_Content\". Configure el botón \" Process Values\" del mismo modo que el botón \" Brewery\" y luego establezca los parámetros visualizados para el evento \" ChangeScreen\". Configure el botón \" Alarms\" del mismo modo que el botón \" Brewery\" y luego establezca los parámetros visualizados para el evento \" ChangeScreen\". Configure el botón \" Production\" del mismo modo que el botón \" Brewery\" y luego establezca los parámetros visualizados para el evento \" ChangeScreen\".';
g_sepIdx[g_sepIdx.length] = '46ff84349f6412511256f00d5e732175';
g_searchEnginePlainTextArray['46ff84349f6412511256f00d5e732175'] = 'Introducción Los empleados del grupo de usuarios \" Worker\" no deben tener acceso a los valores de proceso. Para garantizarlo, configure la protección de acceso oportuna para el botón de apertura de los valores de proceso. Procedimiento Abra la imagen \" Navigation\". Seleccione el botón \" Process Values\" y asígnele el derecho de acceso \" Operate\".';
g_sepIdx[g_sepIdx.length] = 'a0d605da5ff79793d83f8bec4a04bf1a';
g_searchEnginePlainTextArray['a0d605da5ff79793d83f8bec4a04bf1a'] = 'Principios básicos El entorno para manejar y visualizar el proceso de elaboración de cerveza se denomina \" Runtime\". Runtime funciona en el navegador con independencia del panel de operador.  En este Getting Started, Runtime se ejecuta en el PC en el que haya realizado configuraciones. Para poder iniciar el runtime en el navegador web, el usuario que ha iniciado sesión en Windows debe tener derechos de administrador local. ';
g_sepIdx[g_sepIdx.length] = 'c3d0b8a9372564f12c7f12750941cda2';
g_searchEnginePlainTextArray['c3d0b8a9372564f12c7f12750941cda2'] = 'Introducción Se utilizan certificados para poder conectar con seguridad terminales con WinCC Unified Runtime. Los certificados cumplen las tareas siguientes: Confirmación de la identidad de los interlocutores Cifrado del intercambio de datos Principio de funcionamiento WinCC Unified Configuration permite transferir el certificado a los PC cliente que acceden a Runtime ①. Si el operador introduce la URL del servidor de Runtime, se verificará la identidad del cliente a partir del certificado ②. Tras la verificación se autentica el operador con nombre de usuario y contraseña ③. El servidor de Runtime y el cliente se comunican de forma cifrada mediante el protocolo HTTPS ④. Creación de la estructura del certificado WinCC Configuration Tool | FAQ';
g_sepIdx[g_sepIdx.length] = 'fa36066cf833ae63b732ebb4e0b42c6d';
g_searchEnginePlainTextArray['fa36066cf833ae63b732ebb4e0b42c6d'] = 'Iniciar la simulación Inicie en primer lugar la simulación del controlador a través del menú contextual del controlador \"BreweryControl\". La aplicación \"PLCSim\" se inicia automáticamente una vez finanlizado el proceso de carga.  Inicie la simulación para el panel de operador.   Establezca que se utilice la administración local de usuarios y confirme la carga de los datos de configuración en el panel de operador.  En el equipo de configuración, abra el navegador Chrome e inicie Runtime.  Inicie sesión en Runtime.  En este caso, utilice el usuario \" masterbrewer\" que ha creado en la administración de usuarios local. Testear la configuración Compruebe si todos los cambios de imagen funcionan como estaba previsto. Navegue hasta la imagen \"ProductControl\". Cree un juego de parámetros para la variedad de cerveza \"Pilsner\". Introduzca la cantidad deseada de ingredientes y guarde el juego de parámetros \"Pilsner\". ¡Enhorabuena! Ha creado su primer proyecto con WinCC Runtime Unified y lo ha probado correctamente en Runtime. ';
g_sepIdx[g_sepIdx.length] = '80cbf0d6d6fd203320d11073b18ece7d';
g_searchEnginePlainTextArray['80cbf0d6d6fd203320d11073b18ece7d'] = 'Descripción Runtime Collaboration es el nombre que recibe el intercambio de datos entre varios sistemas Unified (Panels y PC) en tiempo de ejecución. Con Runtime Collaboration pueden visualizarse y manejarse sinópticos de otras estaciones en una ventana de imagen. Esto evita la duplicación de tareas durante la configuración. Para hacer posible la transferencia de datos, deben definirse los ajustes de Collaboration en todos los sistemas participantes. Tras la configuración se habilita el Panel para el acceso. En el PC se activa el acceso al panel.';
g_sepIdx[g_sepIdx.length] = '6f2b807c25f30ecd3e844212fb396a95';
g_searchEnginePlainTextArray['6f2b807c25f30ecd3e844212fb396a95'] = 'Introducción En este Getting Started ha configurado en eventos como \" Activated\" funciones que disparan en Runtime, p. ej., un cambio de imagen. Con esta configuración ha conocido una pequeña parte de \"Scripting\". WinCC Runtime Unified tiene un entorno de scripts moderno que admite JavaScript como lenguaje de programación. Entorno de programación El entorno de programación se integra en el entorno de trabajo habitual y admite funciones como Syntax Highlighting. JavaScript se basa en un modelo de objeto mediante el cual se navega en el editor con IntelliSense: Los fragmentos de código facilitan la programación proporcionando patrones de instrucciones que se necesitan a menudo: Conceptos Scripting admite scripts globales y locales: Los scripts globales se programan de forma centralizada en el proyecto. Los scripts globales se abren, p. ej., en scripts locales, p. ej., para convertir unidades de medida.   Los scripts locales se programan en el lugar de uso correspondiente, p. ej., cambio de color de un objeto.  Para tareas de programación que se necesitan a menudo, utilice funciones de sistema predefinidas, p. ej., para cambiar valores o finalizar Runtime.  Ejemplos típicos de aplicación En este Getting Started ha utilizado las siguientes funciones de JavaScript: Fragmentos de código Funciones de sistema Otros ejemplos típicos de aplicación de JavaScript son:  Lectura y escritura de variables Modificación de propiedades de los objetos en función de otras propiedades o valores Acceso a alarmas Referencia Encontrará información más detallada sobre el uso de scripts en el portal SIOS, en la ID de artículo 109758536.';
