var g_sepIdx = [];
//g_searchEnginePlainTextArray -> treeId | TopicText
var g_searchEnginePlainTextArray = [];
g_sepIdx[g_sepIdx.length] = '8c79bbffdf2b09435ebee508c938a28d';
g_searchEnginePlainTextArray['8c79bbffdf2b09435ebee508c938a28d'] = 'Willkommen zum Getting Started zu \"WinCC Runtime Unified\". Wir zeigen Ihnen am Beispiel einer mittelständischen Brauerei, wie Sie mit WinCC einen ersten Schritt zur Projektierung der Bedien- und Beobachtungslösung zum Führen des Brauereiprozesses durchführen. Gegenstand der Projektierung Gegenstand der Projektierung sind folgende Prozessschritte aus dem nachfolgend dargestellten Brauereiprozess: Maischen Läutern Würzen Die Brauerei verarbeitet ausschließlich Rohstoffe aus der Region, weswegen nur ein Braukessel eingesetzt wird.  Projektierungsschritte Im Getting Started lernen Sie folgende Projektierungsschritte kennen: Visualisierung des Brauprozesses projektieren Brauprozess überwachen und protokollieren Parametersätze projektieren (optional) Benutzerverwaltung projektieren Bildnavigation projektieren Funktionstest in Runtime durchführen Beispielprojekt Wenn Sie die in diesem Getting Started gezeigten Projektierungsschritte und -ergebnisse nur ansehen wollen, verwenden Sie das Projekt \" Brewery\". Dieses Projekt enthält das fertige, ablauffähige Projekt, in dem alle im Getting Started gezeigten Projektierungsschritte bereits vollzogen wurden. Das Projekt besteht aus einer Steuerung und einem HMI. Das HMI ist mit der Steuerung über Ethernet verbunden. Über das HMI wird der Brauprozess bedient und überwacht. Die Steuerung verarbeitet die Parameter entsprechend ihrer Programmierung und sendet Messdaten der Sensoren zur Anzeige an das HMI.  Beispielprojekt \"Brewery\" als Download im SIOS-Portal';
g_sepIdx[g_sepIdx.length] = 'a1c9a2cee6b96a87ae3027826f1db09a';
g_searchEnginePlainTextArray['a1c9a2cee6b96a87ae3027826f1db09a'] = 'Grundlagen In einem Projekt werden alle Daten für eine Bedien- und Beobachtungslösung strukturiert gespeichert:  Ein oder mehrere Bediengeräte inklusive der Prozesskommunikation und Projektierungsdaten für jedes Bediengerät. ';
g_sepIdx[g_sepIdx.length] = 'efc52f589bd3bd70def195ee96a1b35c';
g_searchEnginePlainTextArray['efc52f589bd3bd70def195ee96a1b35c'] = 'Einleitung  Für das Beispielprojekt der Brauerei soll ein Projekt angelegt werden. Vorgehen Legen Sie ein neues Projekt an Wechseln Sie zur Projektsicht Fügen Sie ein neues Gerät hinzu';
g_sepIdx[g_sepIdx.length] = '8d871b175e639ae5e580d5670a05b108';
g_searchEnginePlainTextArray['8d871b175e639ae5e580d5670a05b108'] = 'Grundlagen WinCC arbeitet mit zwei Arten von Variablen: Externe Variablen Interne Variablen Die externen Variablen sind das Bindeglied zwischen WinCC und den Automatisierungssystemen. Die Werte von externen Variablen entsprechen den Prozesswerten aus dem Speicher eines Automatisierungssystems. Interne Variablen besitzen keine Prozessanbindung und transportieren nur Werte innerhalb von WinCC. ';
g_sepIdx[g_sepIdx.length] = 'aaddf3760e2b7bd5746fc38e6e2910b3';
g_searchEnginePlainTextArray['aaddf3760e2b7bd5746fc38e6e2910b3'] = 'Einleitung Während des Brauprozesses sollen einzelne Prozessgrößen, wie die Füllstände in den Vorratstanks oder die Temperatur im Maischbottich, überwacht werden. Für jede dieser Größen muss jeweils eine Variable erstellt werden. Im Folgenden sollen die in der Tabelle gezeigten Variablen erstellt und in Variablentabellen organisiert werden.  Name der Variablentabelle Verwendung filling_levels Füllstand Tanks temperature Temperatur Tanks pressure Druck Tanks valve_status Ventilstatus mash_tun Maischbottich Zustände Variablenname Verwendung Datentyp Variablentabelle HMI_filling_level_water Füllstand Tank Wasser Int filling_levels HMI_filling_level_hop Füllstand Tank Hopfen Int filling_levels HMI_filling_level_malt Füllstand Tank Malz Int filling_levels HMI_valve_status_water Ventilstatus Tank Wasser offen/zu Bool valve_status HMI_valve_status_hop Ventilstatus Tank Hopfen offen/zu Bool valve_status HMI_valve_status_malt Ventilstatus Tank Malz offen/zu Bool valve_status HMI_filling_level_mash_tun Füllstand Maischbottich Int mash_tun HMI_temperature_mash_tun Temperatur Maischbottich Int mash_tun HMI_mash_tun_heating Heizer aktiv/ inaktiv Bool mash_tun HMI_pressure_water Druck Tank Wasser Int pressure HMI_pressure_hop Druck Tank Hopfen Int pressure HMI_pressure_malt Druck Tank Malz Int pressure HMI_temperature_water Temperatur Tank Wasser Int temperature HMI_temperature_hop Temperatur Tank Hopfen Int temperature HMI_temperature_malt Temperatur Tank Malz Int temperature Vorgehen Legen Sie eine Variablentabelle an und fügen Sie dieser eine Variable hinzu. Benennen Sie die Variable und wählen Sie den Datentyp. Legen Sie die restlichen Variablen auf dieselbe Weise an. Überprüfen Sie Ihre Ergebnisse, indem Sie sich alle Variablen anzeigen lassen.';
g_sepIdx[g_sepIdx.length] = '394b6f060e73307cf9f6ef7a813c43df';
g_searchEnginePlainTextArray['394b6f060e73307cf9f6ef7a813c43df'] = 'Grundlagen Ein HMI-Bild repräsentiert die Bedienoberfläche einer Bedien- und Beobachtungsstation. Im HMI-Bild werden eine Anlage oder ein Prozess mit vordefinierten Bildobjekten visualisiert. Über das HMI-Bild interagiert der Bediener mit dem Prozess. Ein Bild setzt sich aus statischen und dynamischen Bildobjekten zusammen: Statische Bildobjekte sind unabhängig vom Prozess. Statische Bildobjekte sind z. B. Beschriftungen oder Grafiken. Dynamische Bildobjekte ändern sich in Abhängigkeit vom Prozess. Dynamische Bildobjekte visualisieren typischerweise Prozesswerte wie Füllstände. Über dynamische Bildobjekte greift der Bediener in den Prozess ein.';
g_sepIdx[g_sepIdx.length] = '8899f3eb214829f70508723eac6eca10';
g_searchEnginePlainTextArray['8899f3eb214829f70508723eac6eca10'] = 'Einleitung HMI-Bildname Bildtyp Verwendung Größe in Pixel BreweryOverview Startbild Übersichtsbild zum Bedienen und Beobachten des Brauprozesses 1440x900 BreweryProcess Prozessführung Visualisierung des Brauprozesses 1440x800 Alarms Prozessführung Übersicht über Alarme aus dem Prozess ProcessValues Prozessführung Übersicht über archivierte Prozesswerte ProductCtrl Prozessführung Steuerung der Produktion Header Navigation Bild zum Öffnen der Navigation zwischen den Bildern zur Prozessführung 1440x100 Navigation Navigation Bild für die Navigation zwischen den Bildern zur Prozessführung 250x300 Vorgehen Erstellen Sie das HMI-Bild zur Visualisierung des Startbildes. Passen Sie die Größe des HMI-Bildes an. Erstellen Sie auf die gleiche Weise die anderen HMI-Bilder und legen Sie die in der obigen Tabelle genannte Bildgröße fest.';
g_sepIdx[g_sepIdx.length] = 'f55011b52993d6f91ee99b291ed56236';
g_searchEnginePlainTextArray['f55011b52993d6f91ee99b291ed56236'] = 'Zweck Die Bildnavigation setzten Sie mit Hilfe der Bildfenstertechnik um. In einem Übersichtsbild fügen Sie folgende Bildfenster ein, die unterschiedliche Aufgaben erfüllen: Header Über den Header blenden Sie ein Navigations-Fenster ein. Navigation Über die Schaltflächen im Navigations-Fenster wechselt der Bediener den Inhalt im Content-Fenster. Das Navigations-Fenster ist standardmäßig ausgeblendet. Content Im Content-Fenster werden Information zur Anlage angezeigt. Beispielsweise wird der Füllstand der Tanks oder Meldungen der Anlage angezeigt. Den Inhalt der Bildfenster legen Sie über HMI Bilder fest. In diesem Abschnitt legen Sie alle HMI Bilder an, die Sie für die Umsetzung der Bildnavigation in diesem Getting Started benötigen. Template Suite Anlagen und Maschinen werden immer komplexer und damit werden immer höhere Anforderungen an den Bediener einer Anlage gestellt. Eine intuitive und grafisch ansprechende Benutzeroberfläche als Schnittstelle zwischen Mensch und Maschine wird damit immer wichtiger.  Die  HMI Template Suite bietet Ihnen hierfür Vorlagen und Ideen, um die Projektierung Ihres HMI Bediengeräts übersichtlich und modern zu gestalten. Layout und Design sind auf flüssige Bedienbarkeit, Übersichtlichkeit und Erweiterbarkeit ausgelegt. So können Sie die Bedienung Ihrer Maschine vereinfachen sowie Bedienfehler reduzieren.  In folgendem Applikationsbeispiel lernen Sie das Arbeiten mit der  HMI Template Suite: Applikationsbeispiel \"Template Suite\"';
g_sepIdx[g_sepIdx.length] = '8ca8e8114998af0f5b4d378e701e8114';
g_searchEnginePlainTextArray['8ca8e8114998af0f5b4d378e701e8114'] = 'Grundlagen Faceplates sind benutzerdefinierte Gruppen von Anzeige- und Bedienobjekten, die zentral im Projekt gespeichert, verwaltet und bearbeitet werden. Alle Änderungen des Faceplates im Projekt ändern Sie zentral im Faceplate-Typ. Idealerweise nutzen Sie Faceplates für Anlagenobjekte oder -teile, die Sie mehrfach verwenden und die identische Datenstrukturen haben. Um die zentrale Änderbarkeit zu unterstützen, beruhen Faceplates auf einem Typ-Instanz-Modell: Im Faceplate-Typ legen Sie zentral Eigenschaften für Faceplate-Instanzen an. Die Instanzen stellen lokale Verwendungsstellen des Faceplate-Typs dar.';
g_sepIdx[g_sepIdx.length] = '8fd805f9f33db653a1628eb449c64ad3';
g_searchEnginePlainTextArray['8fd805f9f33db653a1628eb449c64ad3'] = 'Einleitung Die Grundzutaten Wasser, Hopfen und Malz werden in drei baugleichen Vorratstanks gelagert. An jedem Vorratstank steuert ein Ventil den Transport in den Maischbottich. Da für alle Tanks dieselben Anzeige- und Bedienelemente verwendet werden, nutzen Sie die Faceplate-Technik zur Umsetzung der Visualisierung. An einem Faceplate-Typ definieren Sie Eigenschaften, die bei der späteren Verwendung parametriert werden.  Für die Projektierung des Faceplate-Typs benötigen Sie folgende Eigenschaften: Eigenschaft Verwendung Datentyp filling_level Gemessener Füllstand im Tank Int valve_status Ventilstatus Bool temperature Gemessene Temperatur im Tank Int pressure Gemessener Druck im Tank Int name Name der Zutat WString Vorgehen Legen Sie in der Bibliothek einen neuen Faceplate-Typ an. Konfigurieren Sie den neuen Faceplate-Typ. Erstellen Sie die Eigenschaft \" filling_level\" für den Faceplate-Typ. Erstellen Sie die restlichen in der Tabelle genannten Eigenschaften für den Faceplate-Typ. Fügen Sie eine Balkenanzeige für den Füllstand ein. Erstellen Sie einen neuen Grafiktyp für Visualisierung des Vorratstanks. Fügen Sie einen Tank als Standardgrafik ein. Den Tank finden Sie in der Toolbox unter \" Graphics \u003e WinCC graphics folder \u003e Equipment \u003e Automation (EMF) \u003e Tanks\". Geben Sie die Version des Grafiktyps frei. Fügen Sie den Grafiktyp in das Bild ein. Erstellen Sie auf die gleiche Weise einen Grafiktyp für das Ventil und fügen Sie diesen in das Bild ein. Das Ventil finden Sie in der Toolbox unter \" Graphics \u003e WinCC graphics folder \u003e Equipment \u003e Automation (EMF) \u003e Valves\". Verknüpfen Sie die Eigenschaft zur Anzeige des Füllstandes mit der Balkenanzeige.   Fügen Sie ein Textfeld zur Bezeichnung sowie einen Kreis ein. Das Textfeld wird in diesem Getting Started noch nicht verschaltet.  Parametrieren Sie den Kreis so, dass dessen Hintergrundfarbe über eine Variable geändert werden kann (1, 2). Blenden Sie abschließend das Feld zur Parametrierung der Variablen ein (3).  Legen Sie den Ventilstatus als Variable für die Farbe fest und bestimmen Sie, welche Farbe für welchen Zustand der Variable angenommen wird. Passen Sie die Größe des Faceplates an. Selektieren Sie abschließend mit \u003cUmschalt+Klick\u003e die Objekte \"Tank\", \"Ventil\" und \"Füllstandsanzeige\" und setzen Sie die Transparenz auf \"100 %\".  Geben Sie den Faceplate-Typ in der Bibliothek frei.';
g_sepIdx[g_sepIdx.length] = 'e7365ad4057ef4c4de223645e95c2257';
g_searchEnginePlainTextArray['e7365ad4057ef4c4de223645e95c2257'] = 'Einleitung Auf Grundlage des erstellten Faceplate-Typs sollen nun die Vorratstanks für die Bierzutaten visualisiert werden. Für jeden Vorratstank fügen Sie eine Instanz des Faceplate-Typs ein und parametrieren die Eigenschaften mit den entsprechenden Variablen. Vorgehen Öffnen Sie das HMI-Bild  \"BreweryProcess\" und erzeugen Sie aus dem Faceplate-Typ die Instanz für den Vorratstank, der Wasser enthält.  Parametrieren Sie die Eigenschaften \" pressure\" der Faceplate-Instanz mit der Variablen \" HMI_pressure_water\". Parametrieren Sie auf die gleiche Weise die restlichen Eigenschaften der Faceplate-Instanz. Visualisieren und parametrieren Sie auf die gleiche Weise den  Vorratstanks für \"Hopfen\". Visualisieren und parametrieren  Sie auf die gleiche Weise den  Vorratstanks für \"Malz\".';
g_sepIdx[g_sepIdx.length] = '3ea41680b675ae9da1f17efb61c42e46';
g_searchEnginePlainTextArray['3ea41680b675ae9da1f17efb61c42e46'] = 'Einleitung Im Folgenden soll das bereits angelegte Prozessbild, welches die drei Vorratstanks für Wasser, Hopfen und Malz enthält um die restlichen Komponenten des Brauprozesses erweitert werden. Hierzu wird ein Maischbottich eingefügt und über Rohre mit den Vorratstanks verbunden. Eine Wärmequelle, die den Maischbottich erhitzt wird eingefügt. Zusätzlich zu den grafischen Elementen sollen Anzeigeelemente für die Prozesswerte des Maischbottichs hinzugefügt werden. Vorgehen Fügen Sie den abgebildeten Tank ein, der den Maischbottich repräsentiert. Verwenden Sie Rohrabbildungen, um das HMI-Bild zu vervollständigen. Fügen Sie die Grafik der abgebildeten Wärmequelle ein. Fügen Sie eine Werteanzeige für die Füllstandsvariable  \"HMI_filling_level_mash_tun\" des Behälters ein. Indem Sie eine Variable in das HMI-Bild ziehen, wird automatisch ein EA-Feld erzeugt, das mit dieser Variablen verbunden ist.  Fügen Sie ein Textfeld zur Beschriftung der Variable ein.';
g_sepIdx[g_sepIdx.length] = '7bc36370ef37eac5758153071e39be2d';
g_searchEnginePlainTextArray['7bc36370ef37eac5758153071e39be2d'] = 'Einleitung Im Folgenden soll ein Pop-up Fenster für Faceplates projektiert werden, in dem bei Klick auf einen der drei Vorratstanks Zusatzinformationen zu Füllstand, Temperatur und Druck des jeweiligen Vorratstanks anzeigt werden. Vorgehen Duplizieren Sie in der Bibliothek das Faceplate für den Tank. So werden alle Schnittstellen-Variablen des Faceplate-Typs \"Tank\" in das neue Faceplate übernommen. Legen Sie die Eigenschaften des neuen Faceplate-Typs fest. Öffnen Sie den neuen Faceplate-Typ zur Bearbeitung. Löschen Sie die grafischen Elemente des kopierten Faceplates. Fügen Sie das Textfeld für den Füllstand ein.  Fügen Sie das Ausgabefeld für den Füllstand ein. Verbinden Sie das Ausgabefeld mit der Schnittstellen-Variable \" filling level\". Projektieren Sie die Textfelder und Ausgabefelder für Temperatur und Druck und verbinden Sie die Ausgabefelder mit den Schnittstellen-Variablen \" temperature\" und \" pressure\". Passen Sie die Größe des Faceplates an. Geben Sie das Pop-up für den Faceplate in der Bibliothek frei. Öffnen Sie den Faceplate-Typ \" Tank\" in der Bibliothek zur Bearbeitung. Legen Sie ein Ereignis an, das durch Linksklick auf den Tank ausgelöst wird. Fügen Sie die Skriptvorlage zum Öffnen eines Faceplates als Popup ein. Fügen Sie den Namen des neu erstellten Faceplates sowie eine Bezeichnung in das Skript ein. Geben Sie den Faceplate-Typ in der Bibliothek frei und legen Sie fest, dass die Instanzen im Projekt aktualisiert werden. Ergebnis Das Pop-up Fenster für Faceplates ist erzeugt und wird in Runtime bei Klick auf einen der Vorratstanks mit den projektierten Informationen angezeigt.';
g_sepIdx[g_sepIdx.length] = 'f59f43027a6aab5a12ac5b902d23f36a';
g_searchEnginePlainTextArray['f59f43027a6aab5a12ac5b902d23f36a'] = 'Grundlagen WinCC gewährleistet, dass alle Ereignisse im Prozessverlauf chronologisch erfasst werden. Abweichungen vom Prozessverlauf werden als Meldungen dem Anlagenbediener visualisiert. WinCC unterstützt die lückenlose Nachverfolgbarkeit bei der Bearbeitung einer Fehlerursache. Eine Meldung beinhaltet den nachverfolgbaren Zustand der Fehlerbearbeitung mit Zeitstempelung. Ein Beispiel für eine Meldung ist die Unterschreitung des Grenzwerts für den Füllstand eines Vorratstanks. ';
g_sepIdx[g_sepIdx.length] = 'cd3582d3ca6c8abe4623f644dec94d31';
g_searchEnginePlainTextArray['cd3582d3ca6c8abe4623f644dec94d31'] = 'Einleitung Im Folgenden soll eine Meldung projektiert werden, die ausgelöst wird, wenn der Füllstand in einem der Vorratstanks unter einen definierten Grenzwert fällt. Folgende Meldungen sollen für die Vorratstanks der Zutaten projektiert werden. Name Alarmtext Überwachte Variable Meldeklasse Grenzwert alarm_level_water \" filling level water low\" HMI_filling_level_water  Alarm 50 l alarm_level_malt \" filling level malt low\" HMI_filling_level_malt Alarm 50 l alarm_level_hop \" filling level hop low\" HMI_filling_level_hop  Alarm 50 l Vorgehen Öffnen Sie die Meldungsübersicht. Erstellen Sie Meldungen für Grenzwertverletzungen des Füllstands. Erstellen Sie die restlichen Meldungen auf dieselbe Weise.';
g_sepIdx[g_sepIdx.length] = '22bcc9724aa1443295a7442f4dcde0c4';
g_searchEnginePlainTextArray['22bcc9724aa1443295a7442f4dcde0c4'] = 'Grundlagen Die Archivierung ist ein Verfahren zur Analyse von Fehlerzuständen und zur Prozessdokumentation. Durch die Auswertung von archivierten Daten können Sie Maßnahmen zur Optimierung von Wartungszyklen oder Steigerung der Produktqualität ableiten. In WinCC wählen Sie während Projektierung Meldeklassen und Variablen aus, die im Prozessbetrieb archiviert werden sollen. Zur späteren Auswertung wählen Sie den Zeitraum, aus dem Sie z. B. Meldungen anzeigen wollen. ';
g_sepIdx[g_sepIdx.length] = 'b47369b06eb865149e75019b40a518c6';
g_searchEnginePlainTextArray['b47369b06eb865149e75019b40a518c6'] = 'Einleitung Die zuvor projektierten Füllstandsmeldungen mit der Meldeklasse \"Alarm\" sollen nun archiviert werden. Zur Archivierung wird ein Meldearchiv erstellt und anschließend bei der Alarmklasse \"Alarm\" hinterlegt. So werden alle Meldungen der Alarmklasse in diesem Meldearchiv archiviert.   Vorgehen Erstellen Sie ein neues Meldearchiv, in dem die Meldungen der Grenzwertverletzungen archiviert werden sollen. Hinterlegen Sie das Meldearchiv bei der Meldeklasse.';
g_sepIdx[g_sepIdx.length] = '2cead40dbf5f5af592fa194f78249781';
g_searchEnginePlainTextArray['2cead40dbf5f5af592fa194f78249781'] = 'Einleitung Die Prozesswerte der Füllstände in den Vorratstanks sowie im Maischbottich sollen archiviert werden. Hierfür muss für jede Variable je eine Archivvariable erzeugt und anschließend einem Variablenarchiv zugewiesen werden. Name Archivvariable Archivierung der Prozesswerte aus Variable Datentyp Variablenarchiv log_water_level HMI_filling_level_water Int filling_levels log_hop_level HMI_filling_level_hop Int filling_levels log_malt_level HMI_filling_level_malt Int filling_levels log_mash_tun_level HMI_filling_level_mash_tun Int filling_levels log_status_water HMI_valve_status_water Bool valve_status log_status_hop HMI_valve_status_hop Bool valve_status log_status_malt HMI_valve_status_malt Bool valve_status Vorgehen Erstellen Sie ein Variablenarchiv mit dem Namen  \"filling_levels\". Öffnen Sie die Variablentabelle \" filling_levels\" und erzeugen Sie für die oben genannten Variablen je eine Archivvariable. Weisen Sie die Archivvariablen dem Variablenarchiv \" filling_levels\" zu. Öffnen Sie die Variablentabelle \" mash_tun\" und erzeugen Sie für die oben genannte Variable eine Archivvariable. Weisen Sie die Archivvariablen dem Variablenarchiv \" filling_levels\" zu. Erstellen Sie auf dieselbe Weise ein Variablenarchiv \" valve_status\". Öffnen Sie die Variablentabelle \" valve_status\" und erzeugen Sie auf dieselbe Weise für die oben genannten Variablen je eine Archivvariable. Weisen Sie die Archivvariablen dem Variablenarchiv \" valve_status\" zu.';
g_sepIdx[g_sepIdx.length] = '8494675ee2e1d7b7e6279abbc403ac6b';
g_searchEnginePlainTextArray['8494675ee2e1d7b7e6279abbc403ac6b'] = 'Visualisierung von Meldungen Erfasste Meldungen können in Runtime in einer Meldeanzeige dargestellt werden. Auf diese Weise können Sie direkt erkennen, ob Probleme oder Fehler in der Anlage vorliegen. Beispielsweise wird Ihnen angezeigt, wenn ein Grenzwert für den Füllstand eines Vorratstanks unterschritten wird und dieser wieder aufgefüllt werden muss. Visualisierung von Prozesswerten Aktuelle Prozesswerte können in Runtime in einer Kurvenanzeige dargestellt werden. Beispielsweise stellen Sie den Füllstand der drei Vorratstanks in jeweils einer Kurve dar. So können Sie übersichtlich immer den aktuellen Füllstand erkennen und wissen wann neue Vorräte bestellt und wieder aufgefüllt werden müssen. Außerdem können Sie auch den Ventilstatus in einer Kurvenanzeige darstellen. Auf diese Weise können Sie sehen, wann welches Ventil geöffnet ist.';
g_sepIdx[g_sepIdx.length] = '9ffd78adc609cc5c6cc662b0715d537f';
g_searchEnginePlainTextArray['9ffd78adc609cc5c6cc662b0715d537f'] = 'Einleitung Im Folgenden lernen Sie, wie Sie eine Meldeanzeige zur Darstellung der archivierten Meldungen projektieren. Voraussetzung Das Meldearchiv ist angelegt. Vorgehen Öffnen Sie das Bild \" Alarms\" und fügen Sie eine Meldeanzeige ein. Konfigurieren Sie die Meldeanzeige so, dass die archivierten Meldungen angezeigt werden: Ergebnis Die Meldeanzeige zur Darstellung der archivierten Meldungen ist projektiert.';
g_sepIdx[g_sepIdx.length] = 'd3eacd3df898313c4d84a9edf44059d4';
g_searchEnginePlainTextArray['d3eacd3df898313c4d84a9edf44059d4'] = 'Einleitung Die Füllstände der drei Tanks und der Status der drei Ventile soll am Bediengerät als Kurve ausgegeben werden. Voraussetzung Die Füllstände der 3 Tanks sind als archivierte Variablen \" log_hop_level\", \" log_malt_level\" und \" log_water_level\" angelegt. Der Status der 3 Ventile sind als archivierte Variablen \" log_status_hop\", \" log_status_malt\" und \" log_status_water\" angelegt. Vorgehen Öffnen Sie das Bild \" ProcessValues\" und fügen Sie eine Kurvenanzeige ein. Fügen Sie zwei Kurvenbereiche in die Kurvenanzeige ein. Konfigurieren Sie die erste Kurvenanzeige mit den Füllständen: Legen Sie fest, dass die erste Kurve von archivierten Variablen versorgt wird. Legen Sie fest, dass die erste Kurve von der archivierten Variable \" log_hop_level\" mit Werten versorgt wird. Fügen Sie zwei weitere Kurven in die erste Kurvenanzeige ein. Legen Sie fest, dass die beiden Kurven von den archivierten Variablen \" log_malt_level\" und \" log_water_level\" mit Werten versorgt werden. Weisen Sie der ersten Kurve die gewünschte Linienfarbe zu. Weisen Sie den anderen beiden Kurven die gewünschten Linienfarben zu. Konfigurieren Sie die zweite Kurvenanzeige mit den Ventilstatus: Legen Sie fest, dass die erste Kurve von archivierten Variablen versorgt wird. Legen Sie fest, dass die erste Kurve von der archivierten Variable \" log_status_hop\" mit Werten versorgt wird. Legen Sie für die erste Kurve den Kurvenmodus \" Stepped\" fest. Fügen Sie zwei weitere Kurven in die zweite Kurvenanzeige ein. Legen Sie fest, dass die beiden Kurven von den archivierten Variablen \" log_status_malt\" und \" log_status_water\" mit Werten versorgt werden, und legen Sie für die beiden Kurven den Kurvenmodus \" Stepped\" fest. Weisen Sie der ersten Kurve die gewünschte Linienfarbe zu. Weisen Sie den anderen beiden Kurven die gewünschten Linienfarben zu. Ergebnis Die Kurvenanzeige zur Darstellung der Füllstände und der Ventilstatus ist projektiert.';
g_sepIdx[g_sepIdx.length] = '43dd2ff4fe5d7e182a0debe8493ab64c';
g_searchEnginePlainTextArray['43dd2ff4fe5d7e182a0debe8493ab64c'] = 'Parametersatztyp Im Parametersatztyp werden die Parameter und deren Eigenschaften festgelegt, nach denen ein Produkt gefertigt wird. Ein Parametersatztyp ist eine Vorlage für unterschiedliche Produkte mit den gleichen Grundzutaten.  Im Parametersatztyp werden keine konkreten Parameterwerte hinterlegt. Dafür wird anhand des Parametersatztyps für jedes herzustellende Produkt ein Parametersatz erstellt, zum Beispiel Hefeweizen oder Pils. Parametersätze sollten dann verwendet werden, wenn häufig zwischen Produkten mit ähnlicher Zusammensetzung gewechselt wird. Im Prozess kann schnell auf ein anderes Produkt gewechselt werden. Grundsätzliche Änderungen der Struktur werden zentral am Parametersatztyp durchgeführt. Parametersätze im Brauprozess Der Braumeister erstellt einen oder mehrere Parametersätze oder importiert diese. Der Schichtleiter wählt den Parametersatz für das herzustellende Produkt aus. Der Parametersatz wird vom HMI an die Steuerung übertragen und der Brauprozess startet. Die Steuerung arbeitet das Anwenderprogramm ab und verwendet die Parameterwerte der Grundzutaten für die Fertigung. Die einzelnen Zutaten werden in den Maischbehälter geleitet. Der Brauprozess läuft entsprechend des Anwenderprogramms weiter.';
g_sepIdx[g_sepIdx.length] = '5288ba7ac44143b01ec97f440865792f';
g_searchEnginePlainTextArray['5288ba7ac44143b01ec97f440865792f'] = 'Einleitung Im Folgenden soll ein Parametersatztyp projektiert werden. Dazu müssen Sie eine Steuerung projektieren. Wenn Sie Ihre Projektierung im Anschluss testen möchten, laden Sie das Projekt entweder auf eine reale Steuerung oder verwenden Sie \" PLCSim\" um eine Steuerung zu simulieren. Voraussetzung Voraussetzung für die Projektierung Für die Projektierung einer Steuerung benötigen Sie eine Lizenz von \" STEP 7\". Voraussetzung für das Testen der Projektierung Um die Projektierung der Parametersätze mit \" PLCSim\" zu testen, benötigen Sie eine installierte und konfigurierte Version von \" PLCSim\". Informationen zur Installation und Konfiguration finden Sie im Funktionshandbuch von \" PLCSim\". Vorgehen Für die Kommunikation zwischen HMI und Steuerung führen Sie auf der Steuerung folgende Schritte aus: Fügen Sie eine Steuerung hinzu, mit der das HMI kommunizieren kann. Erstellen Sie einen Anwenderdatentyp (UDT). Erstellen Sie einen Programmbaustein und hinterlegen Sie den UDT als Datentyp. Auf HMI-Seite verbinden Sie das HMI mit der Steuerung und projektieren anschließend den Parametersatztypen. Führen Sie dazu folgende Schritte aus: Verknüpfen Sie die Verbindung von HMI und Steuerung über eine HMI-Variable mit dem Programmbaustein. Erstellen Sie den Parametersatztyp. Fügen die Parametersatzanzeige in das Bedienfeld des HMI ein.';
g_sepIdx[g_sepIdx.length] = '8fc08deb70bbbab8290f53e71dd25302';
g_searchEnginePlainTextArray['8fc08deb70bbbab8290f53e71dd25302'] = 'Einleitung Um Parametersätze zu übertragen, projektieren Sie zuerst eine Steuerung und danach die Verbindung zum HMI. Vorgehen Fügen Sie ein neues Gerät hinzu. Wählen Sie die Steuerung \" 1518T-4 PN/DP\" aus und benennen Sie diese in \" Brewery Control\" um. Wechseln Sie zu \"Geräte \u0026 Netze\". Fügen Sie dem HMI das Kommunikationsmodul \" CP 1612 (A2)\" hinzu. Vernetzen Sie die Steuerung mit der neuen Schnittstelle des HMI. Erzeugen Sie die HMI-Verbindung zwischen HMI und Steuerung.';
g_sepIdx[g_sepIdx.length] = '4a449ba928c003de1ae9c4c393e063ab';
g_searchEnginePlainTextArray['4a449ba928c003de1ae9c4c393e063ab'] = 'Einleitung Im Folgenden erstellen Sie einen Anwenderdatentyp auf der Steuerung und fügen ihn zur Projektbibliothek hinzu. Der Anwenderdatentyp wird später als Grundlage für den Parametersatztyp verwendet. Folgende Elemente sollten im Anwenderdatentyp erstellt werden: Elementname Verwendung Datentyp water Mengenanteil Wasser Int hop Mengenanteil Hopfen Int malt Mengenanteil Malz Int Anwenderdatentyp erstellen und zur Bibliothek hinzufügen Fügen Sie einen neuen Datentyp hinzu. Benennen Sie den Anwenderdatentyp in \" UDT_Beer\" um und fügen Sie die Elemente \" Water\", \" Hop\" und \" Malt\" hinzu. Wählen Sie für alle Elemente den Datentyp \" Int\". Fügen Sie den neuen Anwenderdatentyp zur Projektbibliothek hinzu. Benennen Sie den Anwenderdatentyp in der Bibliothek mit \" UDT_Beer\".';
g_sepIdx[g_sepIdx.length] = '2a15dae3d779f47d2ad558ceeb130352';
g_searchEnginePlainTextArray['2a15dae3d779f47d2ad558ceeb130352'] = 'Einleitung Im Programmbaustein werden die Werte der Elemente \" Water\", \" Hop\" und \" Malt\" gespeichert. Im Folgenden fügen Sie einen Datenbaustein ein und verknüpfen diesen mit dem Anwenderdatentyp \" UDT_Beer\". Vorgehen Fügen Sie einen neuen Programmbaustein hinzu. Benennen Sie den neuen Datenbaustein in \" DB_Brewery\" um. Erstellen Sie ein neues Element \" Beer\" und verwenden Sie den Anwenderdatentyp als Datentyp. Die Parameter des Anwenderdatentyps werden automatisch hinzugefügt.';
g_sepIdx[g_sepIdx.length] = 'e83c375579719e119021ee3a6528f09a';
g_searchEnginePlainTextArray['e83c375579719e119021ee3a6528f09a'] = 'Einleitung Im Folgenden projektieren Sie den Datenaustausch zwischen Steuerung und HMI-Bediengerät. HMI-Verbindung mit Programmbaustein verknüpfen Fügen Sie eine neue Variablentabelle \" Recipe\" hinzu und erstellen Sie einen Parameter \" HMI_Beer\". Wählen Sie die HMI-Verbindung. Wählen Sie die zuvor für den Datenbaustein erstellten PLC-Datentyp \" Beer\" aus.';
g_sepIdx[g_sepIdx.length] = '00be830658fcb99f8091bd747221757c';
g_searchEnginePlainTextArray['00be830658fcb99f8091bd747221757c'] = 'Einleitung Im Folgenden erstellen Sie ein Parametersatztyp für mehrere Biersorten. Der Parametersatz soll seine Struktur durch den Parametersatztyp  \"PST_Beer\" erhalten. Der Parametersatztyp besteht aus den Elementen  \"water\",  \"hop\" und  \"malt\". Elementname Verwendung Datentyp Maßeinheit water Mengenanteil Wasser Int l hop Mengenanteil Hopfen Int kg malt Mengenanteil Malz Int kg Vorgehen Fügen Sie einen neuen Parametersatztyp hinzu und benennen Sie ihn in \" PST_Beer\" um. Wählen Sie den Anwenderdatentyp \" UDT_Beer\" als Datentyp. Die Struktur wird anhand des Anwenderdatentyps automatisch erstellt. Wählen Sie die Variable \" Beer\". Legen Sie die Maßeinheiten für die Datentypen fest.';
g_sepIdx[g_sepIdx.length] = 'd0016df7e4c986f91a49b4cec65dc46c';
g_searchEnginePlainTextArray['d0016df7e4c986f91a49b4cec65dc46c'] = 'Einleitung Im Folgenden projektieren Sie die Parametersatzanzeige. Über die Parametersatz-Anzeige werden in Runtime die Parametersätze erstellt und bearbeitet. Vorgehen Fügen Sie in das HMI-Bild \" ProductCtrl\" die Parametersatz-Anzeige ein. Verbinden Sie den Parametersatztyp mit der Parametersatz-Anzeige.';
g_sepIdx[g_sepIdx.length] = '97da620fc784de1441258bf51cb013a7';
g_searchEnginePlainTextArray['97da620fc784de1441258bf51cb013a7'] = 'Einleitung Um die Verbindung mit PLCSim herzustellen, definieren Sie die Zugriffsrechte für die SPS und richten anschließend die Verbindung ein. Wenn Sie die Simulation starten, öffnet sich das PLCSim-Steuerfenster. Über die Schaltflächen Run und Stop können Sie die Simulation steuern. Wenn Sie dem erklärten Vorgehen folgen, ist keine Bedienung des Steuerfensters erforderlich.  Während des Vorgehens deaktivieren Sie Funktionen zum Schutz vertraulicher Daten und Einschränkungen der Bedienung.  Diese Funktionen werden zur Vereinfachung der Simulation deaktiviert. Im realen Prozessumfeld müssen diese Zugriffe eingeschränkt werden. Bei Automatisierungssystemen stehen die unbedingte Aufrechterhaltung der Betriebssicherheit und der Schutz von Leib und Leben an erster Stelle. Die entscheidende Voraussetzung hierfür ist die Wahrung der Verfügbarkeit der Anlage und damit die uneingeschränkte Kontrolle über den Prozess. Vorgehen Öffnen Sie die Eigenschaften der Steuerung \"Brewery Control\". Deaktivieren Sie die Funktion zum Schutz vertraulicher PLC-Konfigurationsdaten und wählen Sie die Zugriffsstufe \"Vollzugriff\" für die Steuerung. Starten Sie die Simulation. Suchen Sie ein Zielgerät und wählen Sie es aus. Überprüfen Sie die Einstellungen und laden Sie die Daten. Schließen Sie den Ladevorgang ab. Stellen Sie eine \"Online-Verbindung\" her. Ergebnis Die Verbindung ist erfolgreich hergestellt.';
g_sepIdx[g_sepIdx.length] = 'f5ad851385b46bf71b35d072364fd27d';
g_searchEnginePlainTextArray['f5ad851385b46bf71b35d072364fd27d'] = 'Grundlagen WinCC ermöglicht es, sicherheitsrelevante Bedienaktionen nur von bestimmten Benutzern vornehmen zu lassen und dadurch Daten und Funktionen in Runtime vor unberechtigtem Zugriff zu schützen. Sie richten Benutzer ein und statten diese mit Berechtigungen aus. An sicherheitsrelevanten Objekten projektieren Sie die zur Bedienung erforderlichen Berechtigungen. In Runtime müssen sich Benutzer durch Eingabe von Benutzername und Kennwort ausweisen. Wenn der Benutzer die benötigte Berechtigung besitzt, wird die Aktion ausgeführt. Wenn einem Benutzer eine Rolle zugewiesen wird, erhält er die damit verbundenen Rechte. Rollen mit zugehörigen Rechten können für einen Brauprozess wie folgt aussehen: Braumeister Schichtleiter Bediener Darf den Prozess beobachten x x x Darf den Prozess bedienen x x Darf die Rezepturen bearbeiten x Die Benutzerverwaltung erfolgt entweder global oder lokal. Globale und lokale Benutzerverwaltung Die lokale Benutzerverwaltung wird im Projekt durchgeführt. Die Benutzer werden durch den Engineer erstellt und existieren nur in diesem Projekt. Der Engineer definiert die Rechte der einzelnen Rollen und weist den Benutzern ihre Rollen zu. Wenn nachträglich ein neuer Benutzer hinzugefügt oder entfernt werden soll, muss das Projekt geändert werden. Die lokale Benutzerverwaltung ist sinnvoll, wenn nur ein Projekt erstellt und verwaltet wird. Zum Beispiel eine einzige Brauerei. Bei der globalen Benutzerverwaltung sind die Benutzer von der Rolle im Projekt entkoppelt. Die Benutzer werden zentral auf einem externen Server verwaltet. Die Benutzer werden auf dem externen Server angelegt und in Gruppen organsiert, die ihrem späteren Einsatz entsprechen. Der Engineer legt im Projekt keine Benutzer an. Er importiert die Gruppen des externen Servers und weist den Gruppen die entsprechenden Rollen zu. Um Nutzer nachträglich hinzuzufügen, werden diese auf dem externen Server erstellt und einer bestehenden Gruppe zugewiesen. Dadurch erhalten sie automatisch die Rolle, die der Gruppe im jeweiligen Projekt zugewiesen ist. Eine Änderung am Projekt ist nicht notwendig.  Die globale Benutzerverwaltung eignet sich besonders, wenn mehrere Projekte zentral gepflegt werden sollen. Zum Beispiel wenn mehrere Brauereien durch dasselbe Unternehmen verwaltet werden oder wenn häufig neue Mitarbeiter hinzukommen.';
g_sepIdx[g_sepIdx.length] = '54ef26d7006ca83ea81a2eaac10b5820';
g_searchEnginePlainTextArray['54ef26d7006ca83ea81a2eaac10b5820'] = ' XML_NODE_NOTE Einleitung Im Folgenden lernen Sie, wie Sie eine lokale Benutzerverwaltung anlegen. Lokale Benutzer anlegen Legen Sie einen neuen lokalen Benutzer an. Benennen Sie den neuen lokalen Benutzer und definieren Sie ein Kennwort. Benutzernamen dürfen keine Leerzeichen enthalten Legen Sie zwei weitere Benutzer an und definieren Sie für jeden Benutzer ein Kennwort. Weisen Sie dem Benutzer \" masterbrewer\" die Rolle \" HMI Administrator\" zu. Weisen Sie dem Benutzer \" shiftsupervisor\" die Rolle \" HMI Operator\" zu. Weisen Sie dem Benutzer \" worker\" die Rolle \" HMI Monitor\" zu. Zeigen Sie die Rechte eines Benutzers an und überprüfen Sie diese. Sie können bei Bedarf auch eigene Benutzerrollen definieren.';
g_sepIdx[g_sepIdx.length] = '5e0bc357d8fffe5020f08d5a266872a7';
g_searchEnginePlainTextArray['5e0bc357d8fffe5020f08d5a266872a7'] = 'Grundlagen Die Prozessvisualisierung wird in der Regel auf mehrere Bilder verteilt, z. B. nach funktionalen oder technologischen Aspekten. Der Wechsel zwischen Bildern wird als Bildnavigation bezeichnet.';
g_sepIdx[g_sepIdx.length] = 'fa162268dd280668d5335ba55cb814e2';
g_searchEnginePlainTextArray['fa162268dd280668d5335ba55cb814e2'] = 'Grundlagen Mit der Bildfenstertechnik setzen Sie die Bildnavigation um. Sie teilen das Übersichtsbild mit Hilfe von Bildfenstern in drei Bereiche und legen fest, welche HMI-Bilder im jeweiligen Bildfenster angezeigt werden. Im Bildfenster \" sw_Content\" werden Informationen zur Anlage angezeigt, beispielsweise der Brauprozess, Meldungen oder Prozesswerte. In den Bildfenstern \" sw_Header\" und \" sw_Navigation\" werden die HMI-Bilder angezeigt, die für die Navigation verwendet werden. Über die Schaltfläche \" Open Navigation\" im HMI-Bild \" Header\" blenden Sie das HMI-Bild \" Navigation\" ein. Über die Schaltflächen im HMI-Bild \" Navigation\", wechselt der Bediener in Runtime die Bilder im Bildfenster \" sw_Content\". Projektierung In diesem Abschnitt lernen Sie Folgendes: Einfügen und Konfigurieren von Bildfenstern Projektierung von Schaltflächen zum Ein- und Ausblenden von Bildfenstern über die Systemfunktion \" SetPropertyValue\" Projektierung von Schaltflächen zum Wechseln des Inhalts eines Bildfensters über die Systemfunktion \" ChangeScreen\"';
g_sepIdx[g_sepIdx.length] = '445628e991dc3b999f1629c5ed54608c';
g_searchEnginePlainTextArray['445628e991dc3b999f1629c5ed54608c'] = 'Einleitung Die Bildnavigation setzen Sie mit der \"Bildfenstertechnik\" um. Bei der Bildfenstertechnik realisieren Sie eine Bild-in-Bild-Darstellung: Die Bildwechsel werden im Bildfenster ausgeführt. Das Grundbild mit den Bildfenstern bleibt immer sichtbar. Objekt Typ Beschriftung Verwendung BreweryOverview HMI-Bild - Übersichtsbild zum Bedienen und Beobachten des Brauprozesses sw_Content Bildfenster - Bild zum Anzeigen der Bilder zur Prozessführung sw_Header Bildfenster - Bild zum Öffnen der Navigation zwischen den Bildern zur Prozessführung sw_Navigation Bildfenster - Bild für die Navigation zwischen den Bildern zur Prozessführung btn_ShowNavigation Schaltfläche Open Navigation Blendet das Bildfenster \" sw_Navigation\" ein btn_HideNavigation Schaltfläche \u003c Blendet das Bildfenster \" sw_Navigation\" aus btn_ProcessBrewery Schaltfläche Brewery Bildwechsel zum Brauprozess btn_ProcessValues Schaltfläche Process Values Bildwechsel zu Prozesswerten aus dem Brauprozess btn_Alarms Schaltfläche Alarms Bildwechsel zu Meldungen aus dem Brauprozess btn_ProductCtrl Schaltfläche Production Bildwechsel zur Produktionssteuerung Vorgehen Öffnen Sie das HMI-Bild \" BreweryOverview\" und fügen Sie ein Bildfenster zur Anzeige des  Headers ein. Legen Sie fest, dass das HMI-Bild \" Header\" im Bildfenster angezeigt wird. Konfigurieren Sie die Fenstereinstellungen für das Bildfenster. Konfigurieren Sie das Bildfenster so, dass sich das Bildfenster an die Größe des angezeigten HMI-Bildes anpasst. Legen Sie den Namen des Bildfensters fest. Projektieren Sie das Bildfenster \" sw_Content\": Kopieren Sie das Bildfenster \" sw_Header\". Benennen Sie das kopierte Bildfenster in \" sw_Content\" um. Legen Sie fest, dass das HMI-Bild \" BreweryProcess\" im Bildfenster angezeigt wird. Projektieren Sie das Bildfenster \" sw_Navigation\": Kopieren Sie das Bildfenster \" sw_Header\". Benennen Sie das kopierte Bildfenster in \" sw_Navigation\" um. Legen Sie fest, dass das HMI-Bild \" Navigation\" im Bildfenster angezeigt wird. Legen Sie fest, dass das Bildfenster \" sw_Navigation\" immer im Vordergrund angezeigt wird.  Positionieren Sie die drei Bildfenster im HMI-Bild: Legen Sie die Position für das Bildfenster \" sw_Header\" fest. Legen Sie die Position für das Bildfenster \" sw_Content\" fest. Positionieren Sie das Bildfenster \" sw_Navigation\" mit der Maus über den beiden anderen Bildfenstern.';
g_sepIdx[g_sepIdx.length] = 'cac9fd19a67991f790f4611784b3f70d';
g_searchEnginePlainTextArray['cac9fd19a67991f790f4611784b3f70d'] = ' XML_NODE_NOTE Einleitung Im Folgenden projektieren Sie das HMI-Bild \" Header\", das im Bildfenster \" sw_Header\" angezeigt wird. Über die Schaltfläche im HMI-Bild \" Header\" blenden Sie das Bildfenster \" sw_Navigation\" ein, in dem der Bediener das Bild im Bildfenster \" sw_Content\" wechselt.  Vorgehen Öffnen Sie das HMI-Bild \" Header\" und fügen Sie die Schaltfläche ein, die das Bildfenster \" sw_Navigation\" einblendet. Legen Sie die Beschriftung der Schaltfläche fest. Fügen Sie dem Ereignis \" Click left mouse button\" eine Systemfunktion hinzu. Wählen Sie die Systemfunktion zum setzen des Eigenschaftswerts. Legen Sie die Parameter der Systemfunktion \" SetPropertyValue\" fest. Groß- und Kleinschreibung Achten Sie auf die korrekte Groß- und Kleinschreibung beim Festlegen der Parameter.';
g_sepIdx[g_sepIdx.length] = 'aa309aad67a9da81cdecf366c927702e';
g_searchEnginePlainTextArray['aa309aad67a9da81cdecf366c927702e'] = ' XML_NODE_NOTE Einleitung Im Folgenden projektieren Sie das HMI-Bild \" Navigation\", das im Bildfenster \" sw_Navigation\" angezeigt wird. Über die Schaltflächen im HMI-Bild \" Navigation\" wechseln Sie das angezeigte HMI-Bild im Bildfenster \" sw_Content\".  Das Bildfenster \" sw_Navigation\" ist standardmäßig ausgeblendet und kann über die Schaltfläche \" Open Navigation\" im \" Header\" eingeblendet und über die Schaltfläche \" \u003c\" im HMI-Bild \" Navigation\" wieder ausgeblendet werden. Vorgehen Öffnen Sie das HMI-Bild \" Navigation\" und fügen Sie die Schaltfläche ein, die das Bildfenster \" sw_Navigation\" ausblendet. Fügen Sie die anderen Schaltflächen auf die gleiche Weise ein. Konfigurieren Sie die Schaltfläche \" \u003c\", die das Bildfenster \" sw_Navigation\" ausblendet. Fügen Sie dem Ereignis \" Click left mouse button\" eine Systemfunktion hinzu. Wählen Sie die Systemfunktion \" SetPropertyValue\". Legen Sie die Parameter der Systemfunktion \" SetPropertyValue\" fest. Groß- und Kleinschreibung Achten Sie auf die korrekte Groß- und Kleinschreibung beim Festlegen der Parameter. Konfigurieren Sie die Schaltfläche \" Brewery\", die den Brauprozess im Bildfenster \" sw_Content\" anzeigt. Fügen Sie ein neues Ereignis ein. Wählen Sie die Systemfunktion \" ChangeScreen\". Legen Sie fest, dass das Bild \" BreweryProcess\" im Bildfenster \" sw_Content\" angezeigt wird. Geben Sie den relativen Pfad \" ../sw_Content\" des Bildfensters \" sw_Content\" an. Konfigurieren Sie die Schaltfläche \" Process Values\" auf die gleiche Weise wie die Schaltfläche \" Brewery\" und legen Sie die angezeigten Parameter für das Ereignis \" ChangeScreen\" fest. Konfigurieren Sie die Schaltfläche \" Alarms\" auf die gleiche Weise wie die Schaltfläche \" Brewery\" und legen Sie die angezeigten Parameter für das Ereignis \" ChangeScreen\" fest. Konfigurieren Sie die Schaltfläche \" Production\" auf die gleiche Weise wie die Schaltfläche \" Brewery\" und legen Sie die angezeigten Parameter für das Ereignis \" ChangeScreen\" fest.';
g_sepIdx[g_sepIdx.length] = '46ff84349f6412511256f00d5e732175';
g_searchEnginePlainTextArray['46ff84349f6412511256f00d5e732175'] = 'Einleitung Mitarbeiter der Benutzergruppe \" Worker\" sollen nicht auf die Prozesswerte zugreifen. Um dies zu gewährleisten, projektieren Sie für die Schaltfläche zum Aufrufen der Prozesswerte einen entsprechenden Zugriffsschutz. Vorgehen Öffnen Sie das Bild \" Navigation\". Selektieren Sie die Schaltfläche \" Process Values\" und weisen Sie der Schaltfläche das Zugriffsrecht \" Operate\" zu.';
g_sepIdx[g_sepIdx.length] = 'a0d605da5ff79793d83f8bec4a04bf1a';
g_searchEnginePlainTextArray['a0d605da5ff79793d83f8bec4a04bf1a'] = 'Grundlagen Die Umgebung zum Bedienen und Beobachten des Brauereiprozesses wird als \" Runtime\" bezeichnet. Runtime läuft bediengerätunabhängig im Browser.  In diesem Getting Started wird Runtime auf dem PC ausgeführt, auf dem Sie projektiert haben. Damit Runtime im Browser gestartet werden kann, muss der in Windows angemeldete Benutzer über lokale Adminrechte verfügen. ';
g_sepIdx[g_sepIdx.length] = 'c3d0b8a9372564f12c7f12750941cda2';
g_searchEnginePlainTextArray['c3d0b8a9372564f12c7f12750941cda2'] = 'Einleitung Um Endgeräte sicher mit WinCC Unified Runtime zu verbinden, kommen Zertifikate zum Einsatz. Zertifikate erfüllen folgende Aufgaben: Identität der Kommunikationspartner bestätigen Datenaustausch verschlüsseln Funktionsprinzip Mit der WinCC Unified Configuration übertragen Sie das Zertifikat auf die Client-PCs, die auf Runtime zugreifen ①. Wenn der Bediener den URL des Runtime-Servers eingibt, wird die Identität des Clients anhand des Zertifikats geprüft ②. Nach der Prüfung authentifiziert sich der Bediener mit Benutzername und Kennwort ③. Runtime-Server und Client kommunizieren verschlüsselt über das HTTPS-Protokoll ④. Einrichten der Zertifikatsstruktur WinCC Configuration Tool | FAQ';
g_sepIdx[g_sepIdx.length] = 'fa36066cf833ae63b732ebb4e0b42c6d';
g_searchEnginePlainTextArray['fa36066cf833ae63b732ebb4e0b42c6d'] = 'Simulation starten Starten Sie zunächst über das Kontextmenü der Steuerung \"BreweryControl\" die Simulation für die Steuerung. Die Anwendung \"PLCSim\" wird nach dem abgeschlossenen Ladevorgang automatisch gestartet.  Starten Sie für das Bediengerät die Simulation.   Legen Sie fest, dass die lokale Benutzerverwaltung verwendet wird und bestätigen Sie das Laden der Projektierungsdaten auf das Bediengerät.  Öffnen Sie am Projektierungsrechner den Browser Chrome und starten Sie Runtime.  Melden Sie sich in Runtime an.  Verwenden Sie in diesem Fall den Benutzer \" masterbrewer\", den Sie in der lokalen Benutzerverwaltung angelegt haben. Projektierung testen Überprüfen Sie, ob alle Bildwechsel wie vorgesehen funktionieren. Navigieren Sie zum Bild \"ProductControl\". Erstellen Sie einen Parametersatz für die Biersorte \"Pilsner\". Tragen Sie die gewünschten Mengen an Zutaten ein und speichern Sie den Parametersatz \"Pilsner\". Herzlichen Glückwunsch! Sie haben Ihr erstes Projekt mit WinCC Runtime Unified erstellt und erfolgreich in Runtime getestet. ';
g_sepIdx[g_sepIdx.length] = '80cbf0d6d6fd203320d11073b18ece7d';
g_searchEnginePlainTextArray['80cbf0d6d6fd203320d11073b18ece7d'] = 'Beschreibung Runtime Collaboration bezeichnet den Datenaustausch mehrerer Unified Systeme (Panels und PC) untereinander während der Laufzeit. Mit Runtime Collaboration können Prozessbilder anderer Stationen in einem Bildfenster angezeigt und bedient werden. Somit ist kein doppelter Projektierungsaufwand nötig. Um Daten übertragen zu können, müssen die Collaboration-Einstellungen in allen kollaborierenden Systemen festgelegt werden. Nach der Projektierung wird das Panel für den Zugriff freigegeben. Im PC wird der Zugriff auf das Panel aktiviert.';
g_sepIdx[g_sepIdx.length] = '6f2b807c25f30ecd3e844212fb396a95';
g_searchEnginePlainTextArray['6f2b807c25f30ecd3e844212fb396a95'] = 'Einleitung In diesem Getting Started haben Sie an Ereignisse wie \" Activated\" Funktionen projektiert, die in Runtime z. B. einen Bildwechsel auslösen. Mit dieser Projektierung haben Sie einen kleinen Teil des \"Scripting\" kennen gelernt. WinCC Runtime Unified hat eine moderne Skriptumgebung, die als Programmiersprache JavaScript unterstützt. Programmierumgebung Die Programmierumgebung integriert sich in die gewohnte Arbeitsumgebung und unterstützt Funktionen wie Syntax-Highlighting: JavaScript basiert auf einem Objektmodell, durch das Sie im Editor mit IntelliSense navigieren: Code-Snippets erleichtern die Programmierung, indem sie häufig benötigte Anweisungsmuster bereitstellen: Konzepte Scripting unterstützt globale und lokale Skripte: Globale Skripte programmieren Sie zentral im Projekt. Globale Skripte rufen Sie z. B. in lokalen Skripten auf, z. B. für Maßeinheit-Konvertierungen.   Lokale Skripte programmieren Sie an der jeweiligen Verwendungsstelle, z. B. Farbumschlag an einem Objekt.  Für häufig benötigte Programmieraufgaben verwenden Sie vordefinierte Systemfunktionen, z. B. zum Ändern von Werten oder Beenden von Runtime.  Typische Einsatzbeispiele In diesem Getting Started haben Sie folgende Funktionen von JavaScript verwendet: Code-Snippets Systemfunktionen Weitere typische Einsatzbeispiele von JavaScript sind:  Variablen lesen und schreiben Objekt-Eigenschaften in Abhängigkeit von anderen Eigenschaften oder Werten ändern Zugriff auf Alarme Referenz Weiterführende Informationen zum Einsatz von Scripting finden Sie im SIOS-Portal unter der Beitrags-ID 109758536.';
